##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.31A/W32 EVALUATION    01/Mar/2008  10:19:36 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\spi\spi.c                  #
#    Command line    =  F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\spi\spi.c -lC              #
#                       F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USART_USB\Compi #
#                       l\Binary\List\ -o F:\airplane\arm\atmel\AT91SAM7SE51 #
#                       2_IAR\AT91SAM7SE512-USART_USB-IAR4_31A-1_00\AT91SAM7 #
#                       SE-USART_USB\Compil\Binary\Obj\ -z9 --debug          #
#                       --cpu_mode thumb --endian little --cpu ARM7TDMI      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\Program Files\IAR                  #
#                       Systems\Embedded Workbench 4.0                       #
#                       Evaluation\ARM\LIB\dl4tptinl8n.h" -I                 #
#                       F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USART_USB\Compi #
#                       l\srcIAR\ -I F:\airplane\arm\atmel\AT91SAM7SE512_IAR #
#                       \AT91SAM7SE512-USART_USB-IAR4_31A-1_00\AT91SAM7SE-US #
#                       ART_USB\Compil\..\src\ -I                            #
#                       F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USART_USB\Compi #
#                       l\..\..\ -I F:\airplane\arm\atmel\AT91SAM7SE512_IAR\ #
#                       AT91SAM7SE512-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USA #
#                       RT_USB\Compil\..\..\kalman\ -I                       #
#                       F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USART_USB\Compi #
#                       l\..\..\pcm\ -I F:\airplane\arm\atmel\AT91SAM7SE512_ #
#                       IAR\AT91SAM7SE512-USART_USB-IAR4_31A-1_00\AT91SAM7SE #
#                       -USART_USB\Compil\..\..\spi\ -I "C:\Program          #
#                       Files\IAR Systems\Embedded Workbench 4.0             #
#                       Evaluation\ARM\INC\"                                 #
#    List file       =  F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USART_USB\Compi #
#                       l\Binary\List\spi.lst                                #
#    Object file     =  F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE51 #
#                       2-USART_USB-IAR4_31A-1_00\AT91SAM7SE-USART_USB\Compi #
#                       l\Binary\Obj\spi.r79                                 #
#                                                                            #
#                                                                            #
##############################################################################

F:\airplane\arm\atmel\AT91SAM7SE512_IAR\AT91SAM7SE512-USART_USB-IAR4_31A-1_00\spi\spi.c
      1          #include<includs.h>

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code16?? __code __interwork __atpcs unsigned int AT91F_AIC_ConfigureIt(AT91PS_AIC, unsigned int, unsigned int, unsigned int, void (*)())
   \                     AT91F_AIC_ConfigureIt:
   \   00000000   F4B4               PUSH        {R2,R4-R7}
   \   00000002   021C               MOV         R2,R0
   \   00000004   0C1C               MOV         R4,R1
   \   00000006   059E               LDR         R6,[SP, #+20]
   \   00000008   8900               LSL         R1,R1,#+2
   \   0000000A   4718               ADD         R7,R0,R1
   \   0000000C   8037               ADD         R7,#+128
   \   0000000E   3868               LDR         R0,[R7, #+0]
   \   00000010   0125               MOV         R5,#+1
   \   00000012   A540               LSL         R5,R4
   \   00000014   2C1C               MOV         R4,R5
   \   00000016   9225               MOV         R5,#+146
   \   00000018   6D00               LSL         R5,R5,#+1          ;; #+292
   \   0000001A   5519               ADD         R5,R2,R5
   \   0000001C   2C60               STR         R4,[R5, #+0]
   \   0000001E   3E60               STR         R6,[R7, #+0]
   \   00000020   009E               LDR         R6,[SP, #+0]
   \   00000022   1E43               ORR         R6,R3
   \   00000024   5650               STR         R6,[R2, R1]
   \   00000026   6C60               STR         R4,[R5, #+4]
   \   00000028   F8BC               POP         {R3-R7}
   \   0000002A   7047               BX          LR                 ;; return
      2          

   \                                 In segment DATA_Z, align 4, align-sorted
      3          AT91PS_SPI SPI;
   \                     SPI:
   \   00000000                      DS8 4
      4          

   \                                 In segment CODE, align 4, keep-with-next
      5          void SPI_c_irq_handler(void)
      6          {
      7          }
   \                     SPI_c_irq_handler:
   \   00000000   7047               BX          LR                 ;; return
      8          

   \                                 In segment CODE, align 4, keep-with-next
      9          void FIQ_c_irq_handler()
     10          {
     11          }
   \                     FIQ_c_irq_handler:
   \   00000000   7047               BX          LR                 ;; return
     12          
     13          

   \                                 In segment CODE, align 4, keep-with-next
     14          void AT91F_SpiInit(void)
     15          {  
   \                     AT91F_SpiInit:
   \   00000000   70B5               PUSH        {R4-R6,LR}
     16              SPI=AT91C_BASE_SPI;
   \   00000002   134C               LDR         R4,??AT91F_SpiInit_0  ;; SPI
   \   00000004   1348               LDR         R0,??AT91F_SpiInit_0+0x4  ;; 0xfffe0000
   \   00000006   2060               STR         R0,[R4, #+0]
     17              AT91F_PIO_CfgPeriph(AT91C_BASE_PIOA, // PIO controller base address
     18          	  (((unsigned int) AT91C_PA11_NPCS0 ) |((unsigned int) AT91C_PA12_MISO  )|
     19                     ((unsigned int)AT91C_PA13_MOSI ) |((unsigned int) AT91C_PA14_SPCK)),0) ;// Peripheral A
   \   00000008   F021               MOV         R1,#+240
   \   0000000A   C901               LSL         R1,R1,#+7          ;; #+30720
   \   0000000C   124A               LDR         R2,??AT91F_SpiInit_0+0x8  ;; 0xfffff470
   \   0000000E   1160               STR         R1,[R2, #+0]
   \   00000010   124A               LDR         R2,??AT91F_SpiInit_0+0xC  ;; 0xfffff474
   \   00000012   0023               MOV         R3,#+0
   \   00000014   1360               STR         R3,[R2, #+0]
   \   00000016   124A               LDR         R2,??AT91F_SpiInit_0+0x10  ;; 0xfffff404
   \   00000018   1160               STR         R1,[R2, #+0]
     20          	          
     21              AT91F_SPI_CfgPMC() ;
   \   0000001A   2025               MOV         R5,#+32
   \   0000001C   ....               LDR         R1,??DataTable2    ;; 0xfffffc10
   \   0000001E   0D60               STR         R5,[R1, #+0]
     22               // Reset SPI0
     23             // SPI->SPI_CR = AT91C_SPI_SWRST;
     24           
     25                // Configure SPI0 in Master Mode with No CS selected 
     26             // *(AT91C_SPI_CSR + 0) = AT91C_SPI_CPOL | AT91C_SPI_BITS_8 | ((AT91B_MASTER_CLOCK / AT91C_SPI_CLK) << 8);
     27                       
     28               SPI->SPI_MR=AT91C_SPI_MSTR | AT91C_SPI_PS_FIXED | AT91C_SPI_LLB |
     29                                      ((unsigned int) 0xE << 16);
   \   00000020   1049               LDR         R1,??AT91F_SpiInit_0+0x14  ;; 0xfffe0004
   \   00000022   114A               LDR         R2,??AT91F_SpiInit_0+0x18  ;; 0xe0081
   \   00000024   0A60               STR         R2,[R1, #+0]
     30                                      
     31               SPI->SPI_CR=AT91C_SPI_SPIEN;
   \   00000026   0126               MOV         R6,#+1
   \   00000028   0660               STR         R6,[R0, #+0]
     32               
     33               SPI->SPI_CSR[1]= AT91C_SPI_BITS_8 | ((unsigned int) 0x06 <<  8) ;
   \   0000002A   1048               LDR         R0,??AT91F_SpiInit_0+0x1C  ;; 0xfffe0034
   \   0000002C   C021               MOV         R1,#+192
   \   0000002E   C900               LSL         R1,R1,#+3          ;; #+1536
   \   00000030   0160               STR         R1,[R0, #+0]
     34               
     35               AT91F_AIC_ConfigureIt (AT91C_BASE_AIC, AT91C_ID_SPI, SPI_INTERRUPT_LEVEL,
     36                                     AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL, SPI_c_irq_handler);
   \   00000032   0F48               LDR         R0,??AT91F_SpiInit_0+0x20  ;; SPI_c_irq_handler
   \   00000034   01B4               PUSH        {R0}
   \   00000036   0122               MOV         R2,#+1
   \   00000038   0521               MOV         R1,#+5
   \   0000003A   ....               LDR         R0,??DataTable3    ;; 0xfffff000
   \   0000003C   ........           _BLF        AT91F_AIC_ConfigureIt,??AT91F_AIC_ConfigureIt??rT
     37               AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_SPI);
   \   00000040   0C48               LDR         R0,??AT91F_SpiInit_0+0x24  ;; 0xfffff120
   \   00000042   0560               STR         R5,[R0, #+0]
     38               
     39               AT91F_SPI_EnableIt(SPI,AT91C_SPI_RDRF  );
   \   00000044   2068               LDR         R0,[R4, #+0]
   \   00000046   4661               STR         R6,[R0, #+20]
     40          }
   \   00000048   78BC               POP         {R3-R6}
   \   0000004A   01BC               POP         {R0}
   \   0000004C   0047               BX          R0                 ;; return
   \   0000004E   C046               NOP         
   \                     ??AT91F_SpiInit_0:
   \   00000050   ........           DC32        SPI
   \   00000054   0000FEFF           DC32        0xfffe0000
   \   00000058   70F4FFFF           DC32        0xfffff470
   \   0000005C   74F4FFFF           DC32        0xfffff474
   \   00000060   04F4FFFF           DC32        0xfffff404
   \   00000064   0400FEFF           DC32        0xfffe0004
   \   00000068   81000E00           DC32        0xe0081
   \   0000006C   3400FEFF           DC32        0xfffe0034
   \   00000070   ........           DC32        SPI_c_irq_handler
   \   00000074   20F1FFFF           DC32        0xfffff120
     41          
     42          
     43          
     44          
     45          

   \                                 In segment CODE, align 4, keep-with-next
     46          void FIQ_init(void)
     47          {
   \                     FIQ_init:
   \   00000000   00B5               PUSH        {LR}
     48            AT91F_PIO_CfgPeriph(AT91C_BASE_PIOB,(unsigned int)AT91C_PB19_FIQ,0);
   \   00000002   8020               MOV         R0,#+128
   \   00000004   0003               LSL         R0,R0,#+12         ;; #+524288
   \   00000006   0A49               LDR         R1,??FIQ_init_0    ;; 0xfffff670
   \   00000008   0860               STR         R0,[R1, #+0]
   \   0000000A   0A49               LDR         R1,??FIQ_init_0+0x4  ;; 0xfffff674
   \   0000000C   0022               MOV         R2,#+0
   \   0000000E   0A60               STR         R2,[R1, #+0]
   \   00000010   0949               LDR         R1,??FIQ_init_0+0x8  ;; 0xfffff604
   \   00000012   0860               STR         R0,[R1, #+0]
     49            
     50            AT91F_PMC_EnablePeriphClock ( AT91C_BASE_PMC, 1 << AT91C_ID_FIQ) ;
   \   00000014   ....               LDR         R0,??DataTable2    ;; 0xfffffc10
   \   00000016   0121               MOV         R1,#+1
   \   00000018   0160               STR         R1,[R0, #+0]
     51            
     52            AT91F_AIC_ConfigureIt (AT91C_BASE_AIC, AT91C_ID_FIQ, FIQ_INTERRUPT_LEVEL,
     53                                     AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL, FIQ_c_irq_handler);
   \   0000001A   0848               LDR         R0,??FIQ_init_0+0xC  ;; FIQ_c_irq_handler
   \   0000001C   01B4               PUSH        {R0}
   \   0000001E   0023               MOV         R3,#+0
   \   00000020   0522               MOV         R2,#+5
   \   00000022   191C               MOV         R1,R3
   \   00000024   ....               LDR         R0,??DataTable3    ;; 0xfffff000
   \   00000026   ........           _BLF        AT91F_AIC_ConfigureIt,??AT91F_AIC_ConfigureIt??rT
     54            
     55          }
   \   0000002A   08BC               POP         {R3}
   \   0000002C   01BC               POP         {R0}
   \   0000002E   0047               BX          R0                 ;; return
   \                     ??FIQ_init_0:
   \   00000030   70F6FFFF           DC32        0xfffff670
   \   00000034   74F6FFFF           DC32        0xfffff674
   \   00000038   04F6FFFF           DC32        0xfffff604
   \   0000003C   ........           DC32        FIQ_c_irq_handler

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   10FCFFFF           DC32        0xfffffc10

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   00F0FFFF           DC32        0xfffff000

   Maximum stack usage in bytes:

     Function              CSTACK
     --------              ------
     AT91F_AIC_ConfigureIt    20
     AT91F_SpiInit            20
     FIQ_c_irq_handler         0
     FIQ_init                  8
     SPI_c_irq_handler         0


   Segment part sizes:

     Function/Label        Bytes
     --------------        -----
     AT91F_AIC_ConfigureIt   44
     SPI                      4
     SPI_c_irq_handler        2
     FIQ_c_irq_handler        2
     AT91F_SpiInit          120
     FIQ_init                64
     ??DataTable2             4
     ??DataTable3             4
      Others                 60

 
 288 bytes in segment CODE
   4 bytes in segment DATA_Z
  12 bytes in segment INITTAB
 
 196 bytes of CODE memory (+ 104 bytes shared)
   4 bytes of DATA memory

Errors: none
Warnings: none
