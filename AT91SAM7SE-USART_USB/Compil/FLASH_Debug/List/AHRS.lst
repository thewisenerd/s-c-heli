##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.31A/W32 EVALUATION    29/Feb/2012  21:40:03 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐò #
#                       GPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\kalm #
#                       an\AHRS.c                                            #
#    Command line    =  "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\kal #
#                       man\AHRS.c" -lC "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012 #
#                       .1.8ÈÕ\ÉÏÎ»»ú³ÌÐòGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38 #
#                       400(ÎÞËÀ»ú£©\AT91SAM7SE-USART_USB\Compil\FLASH_Debug #
#                       \List\" -o "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8È #
#                       Õ\ÉÏÎ»»ú³ÌÐòGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(Î #
#                       ÞËÀ»ú£©\AT91SAM7SE-USART_USB\Compil\FLASH_Debug\Obj\ #
#                       " -z9 --debug --cpu_mode thumb --endian little       #
#                       --cpu ARM7TDMI --stack_align 4 --interwork -e --fpu  #
#                       None --ec++ --dlib_config "C:\Program Files\IAR      #
#                       Systems\Embedded Workbench 4.0                       #
#                       Evaluation\ARM\LIB\dl4tptinl8n.h" -I                 #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\srcIAR\" -I                 #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\src\" -I                 #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\..\" -I                  #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\..\kalman\" -I           #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\..\pcm\" -I              #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\..\spi\" -I              #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\..\timer\" -I            #
#                       "D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐ #
#                       òGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT9 #
#                       1SAM7SE-USART_USB\Compil\..\..\pid\" -I "C:\Program  #
#                       Files\IAR Systems\Embedded Workbench 4.0             #
#                       Evaluation\ARM\INC\"                                 #
#    List file       =  D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐò #
#                       GPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT91 #
#                       SAM7SE-USART_USB\Compil\FLASH_Debug\List\AHRS.lst    #
#    Object file     =  D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐò #
#                       GPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\AT91 #
#                       SAM7SE-USART_USB\Compil\FLASH_Debug\Obj\AHRS.r79     #
#                                                                            #
#                                                                            #
##############################################################################

D:\syc\×Ô¿Ø·ÉÐÐ³ÌÐò\7½××îÖÕ°æ±¾2012.1.8ÈÕ\ÉÏÎ»»ú³ÌÐòGPS10char·¢ËÍ\ÉÏÎ»»ú³ÌÐòGPSÎÞ´æ´¢38400(ÎÞËÀ»ú£©\kalman\AHRS.c
      1          #include<includs.h>
      2          
      3          
      4          double Quat[4];

   \                                 In segment DATA_Z, align 4, align-sorted
      5          double DCM[3][3];
   \                     DCM:
   \   00000000                      DS8 72
      6          double bias[3]; 
      7          double ahrs_theta[3];  // -pi/2<ahrs_theta[0]<pi/2 , -pi/2<ahrs_theta[1]<pi/2 ,-pi<ahrs_theta[2]<pi 

   \                                 In segment DATA_Z, align 4, align-sorted
      8          double raw_ahrs_theta[ 3 ];//**************10.10.28**************************************
   \                     raw_ahrs_theta:
   \   00000000                      DS8 24

   \                                 In segment DATA_I, align 4, align-sorted
   \                     Quat:
   \   00000000                      DS8 32
   \   00000020                      REQUIRE `?<Initializer for Quat>`
   \                     bias:
   \   00000020                      DS8 24
   \   00000038                      REQUIRE `?<Initializer for bias>`
      9          double P[7][7]={{0},{0},{0},{0},{0,0,0,0,1},{0,0,0,0,0,1},{0,0,0,0,0,0,1}};
   \                     P:
   \   00000038                      DS8 392
   \   000001C0                      REQUIRE `?<Initializer for P>`
   \                     ahrs_theta:
   \   000001C0                      DS8 24
   \   000001D8                      REQUIRE `?<Initializer for ahrs_theta>`

   \                                 In segment DATA_I, align 4, align-sorted
     10          double Q[7][7]={{0.005},{0,0.001},{0,0,0.001},{0,0,0,0.005},{0,0,0,0,1},{0,0,0,0,0,1},{0,0,0,0,0,0,1}};
   \                     Q:
   \   00000000                      DS8 392
   \   00000188                      REQUIRE `?<Initializer for Q>`

   \                                 In segment DATA_I, align 4, align-sorted
     11          double R_attitude[3][3]={{3},{0,3},{0,0,8}};
   \                     R_attitude:
   \   00000000                      DS8 72
   \   00000048                      REQUIRE `?<Initializer for R_attitude>`
     12          //double Q[7][7]={{0.001},{0,0.001},{0,0,0.001},{0,0,0,0.001},{0,0,0,0,0.01},{0,0,0,0,0,0.01},{0,0,0,0,0,0,0.01}};
     13          //double R_attitude[3][3]={{1000},{0,1000},{0,0,1500}};

   \                                 In segment DATA_Z, align 4, align-sorted
     14          double A[7][7];
   \                     A:
   \   00000000                      DS8 392
     15          //double R_heading[1][1]=50;
     16          //double trace;
     17           
     18          /*--------------------------------------------------------------------------------------*/ 
     19          
     20          /*--------------------------------------------------------------------------------------*/ 
     21          
     22          
     23          
     24          /*--------------------------------------------------------------------------------------*/ 
     25          
     26          /*--------------------------------------------------------------------------------------*/ 
     27          

   \                                 In segment CODE, align 4, keep-with-next
     28          void Kalman(const double c[3][7],const double err[3])
     29          {
   \                     ??Kalman:
   \   00000000   F1B5               PUSH        {R0,R4-R7,LR}
   \   00000002   E6B0               SUB         SP,#+408
   \   00000004   0C1C               MOV         R4,R1
     30            double E[3][3];
     31            double K[7][3];
     32            
     33            double temp[21];  
     34            
     35           /* for( i=0;i<3;i++)
     36                 for(j=0;j<3;j++)
     37                   E[i][j]=R_attitude[i][j];*/
     38            
     39                  E[0][0] = R_attitude[0][0]; 
   \   00000006   DE4D               LDR         R5,??Kalman_1      ;; R_attitude
   \   00000008   2AAA               ADD         R2,SP,#+168
   \   0000000A   03CD               LDMIA       R5!,{R0,R1}
   \   0000000C   083D               SUB         R5,#+8
   \   0000000E   03C2               STMIA       R2!,{R0,R1}
     40          	E[0][1] = 0.0;
   \   00000010   0020               MOV         R0,#+0
   \   00000012   0021               MOV         R1,#+0
   \   00000014   2AAA               ADD         R2,SP,#+168
   \   00000016   0832               ADD         R2,#+8
   \   00000018   03C2               STMIA       R2!,{R0,R1}
     41          	E[0][2] = 0.0;
   \   0000001A   2AAA               ADD         R2,SP,#+168
   \   0000001C   1032               ADD         R2,#+16
   \   0000001E   03C2               STMIA       R2!,{R0,R1}
     42          
     43          	E[1][0] = 0.0;
   \   00000020   2AAA               ADD         R2,SP,#+168
   \   00000022   1832               ADD         R2,#+24
   \   00000024   03C2               STMIA       R2!,{R0,R1}
     44          	E[1][1] =  R_attitude[1][1];
   \   00000026   2AAE               ADD         R6,SP,#+168
   \   00000028   2036               ADD         R6,#+32
   \   0000002A   2A1C               MOV         R2,R5
   \   0000002C   2032               ADD         R2,#+32
   \   0000002E   0CCA               LDMIA       R2!,{R2,R3}
   \   00000030   0CC6               STMIA       R6!,{R2,R3}
     45          	E[1][2] = 0.0;
   \   00000032   2AAA               ADD         R2,SP,#+168
   \   00000034   2832               ADD         R2,#+40
   \   00000036   03C2               STMIA       R2!,{R0,R1}
     46          
     47          	E[2][0] = 0.0;
   \   00000038   2AAA               ADD         R2,SP,#+168
   \   0000003A   3032               ADD         R2,#+48
   \   0000003C   03C2               STMIA       R2!,{R0,R1}
     48          	E[2][1] = 0.0;
   \   0000003E   2AAA               ADD         R2,SP,#+168
   \   00000040   3832               ADD         R2,#+56
   \   00000042   03C2               STMIA       R2!,{R0,R1}
     49          	E[2][2] =  R_attitude[2][2];
   \   00000044   2AAA               ADD         R2,SP,#+168
   \   00000046   4032               ADD         R2,#+64
   \   00000048   4035               ADD         R5,#+64
   \   0000004A   03CD               LDMIA       R5!,{R0,R1}
   \   0000004C   03C2               STMIA       R2!,{R0,R1}
     50            
     51           /** unsigned char i,j,l;
     52            for(i=0 ; i<3 ; i++ )
     53          		{
     54          		 for( j=0 ; j<7 ; j++ )
     55          		 c_transpose[j][i] = c[i][j];
     56          		}                      //transpose(c);
     57            */
     58              
     59            mulNxM( temp, c, P, 3, 7, 7, 0, 0 );
   \   0000004E   ....               LDR         R5,??DataTable1    ;; Quat
   \   00000050   0023               MOV         R3,#+0
   \   00000052   1A1C               MOV         R2,R3
   \   00000054   0721               MOV         R1,#+7
   \   00000056   081C               MOV         R0,R1
   \   00000058   0FB4               PUSH        {R0-R3}
   \   0000005A   0323               MOV         R3,#+3
   \   0000005C   2A1C               MOV         R2,R5
   \   0000005E   3832               ADD         R2,#+56
   \   00000060   6A99               LDR         R1,[SP, #+424]
   \   00000062   40A8               ADD         R0,SP,#+256
   \   00000064   ........           _BLF        ??mulNxM,??mulNxM??rT
     60           /* for(i=0;i<3;i++) 
     61              for(j=0;j<7;j++)
     62               for(l=0;l<7;l++)
     63                temp[i][j] += c[i][l]*P[l][j];//mult(c,P,c_transpose)*/
     64            
     65            mulNxM( E, temp,c, 3, 7, 3, 1, 1 ); 
   \   00000068   0123               MOV         R3,#+1
   \   0000006A   1A1C               MOV         R2,R3
   \   0000006C   0321               MOV         R1,#+3
   \   0000006E   0720               MOV         R0,#+7
   \   00000070   0FB4               PUSH        {R0-R3}
   \   00000072   0B1C               MOV         R3,R1
   \   00000074   6E9A               LDR         R2,[SP, #+440]
   \   00000076   44A9               ADD         R1,SP,#+272
   \   00000078   32A8               ADD         R0,SP,#+200
   \   0000007A   ........           _BLF        ??mulNxM,??mulNxM??rT
     66           /* for(i=0;i<3;i++)
     67              for(j=0;j<3;j++)
     68               for(l=0;l<7;l++)
     69                   E[i][j]+=temp[i][l]*c_transpose[l][j]; // E += (C*P)*C.transpose*/
     70             invert3(E,3);
   \   0000007E   0321               MOV         R1,#+3
   \   00000080   32A8               ADD         R0,SP,#+200
   \   00000082   ........           _BLF        ??invert3,??invert3??rT
     71            
     72             mulNxM( temp, P, c, 7, 7, 3, 1, 0 );  //P*C.transpose
   \   00000086   0023               MOV         R3,#+0
   \   00000088   0122               MOV         R2,#+1
   \   0000008A   0321               MOV         R1,#+3
   \   0000008C   0720               MOV         R0,#+7
   \   0000008E   0FB4               PUSH        {R0-R3}
   \   00000090   031C               MOV         R3,R0
   \   00000092   729A               LDR         R2,[SP, #+456]
   \   00000094   291C               MOV         R1,R5
   \   00000096   3831               ADD         R1,#+56
   \   00000098   48A8               ADD         R0,SP,#+288
   \   0000009A   ........           _BLF        ??mulNxM,??mulNxM??rT
   \   0000009E   0CB0               ADD         SP,#+48
     73            /* for(i=0;i<7;i++)
     74              for(j=0;j<3;j++)
     75               for(l=0;l<7;l++)
     76                temp[i][j] += P[i][l]*c_transpose[l][j];//P*C.transpose*/
     77             
     78          	
     79            mulNxM( K, temp, E, 7, 3, 3, 0, 0 );
   \   000000A0   0023               MOV         R3,#+0
   \   000000A2   1A1C               MOV         R2,R3
   \   000000A4   0321               MOV         R1,#+3
   \   000000A6   081C               MOV         R0,R1
   \   000000A8   0FB4               PUSH        {R0-R3}
   \   000000AA   0723               MOV         R3,#+7
   \   000000AC   2EAA               ADD         R2,SP,#+184
   \   000000AE   40A9               ADD         R1,SP,#+256
   \   000000B0   04A8               ADD         R0,SP,#+16
   \   000000B2   ........           _BLF        ??mulNxM,??mulNxM??rT
     80          /*  for(i=0;i<7;i++)
     81              for(j=0;j<3;j++)
     82               for(l=0;l<3;l++)
     83                   K[i][j]=temp[i][l]*E[l][j];//mult3( P, C_transpose,  invert( E ) );*/
     84          
     85                  Quat[0] += K[0][0] * err[0] + K[0][1] * err[1] + K[0][2] * err[2];  // X += K *	err
   \   000000B6   04A8               ADD         R0,SP,#+16
   \   000000B8   0830               ADD         R0,#+8
   \   000000BA   0830               ADD         R0,#+8
   \   000000BC   03C8               LDMIA       R0!,{R0,R1}
   \   000000BE   221C               MOV         R2,R4
   \   000000C0   1032               ADD         R2,#+16
   \   000000C2   0CCA               LDMIA       R2!,{R2,R3}
   \   000000C4   ........           _BLF        __dMul,??__dMul??rT
   \   000000C8   03B4               PUSH        {R0,R1}
   \   000000CA   06A8               ADD         R0,SP,#+24
   \   000000CC   0830               ADD         R0,#+8
   \   000000CE   0CC8               LDMIA       R0!,{R2,R3}
   \   000000D0   201C               MOV         R0,R4
   \   000000D2   0830               ADD         R0,#+8
   \   000000D4   03C8               LDMIA       R0!,{R0,R1}
   \   000000D6   ........           _BLF        __dMul,??__dMul??rT
   \   000000DA   061C               MOV         R6,R0
   \   000000DC   0F1C               MOV         R7,R1
   \   000000DE   06A8               ADD         R0,SP,#+24
   \   000000E0   0CC8               LDMIA       R0!,{R2,R3}
   \   000000E2   03CC               LDMIA       R4!,{R0,R1}
   \   000000E4   083C               SUB         R4,#+8
   \   000000E6   ........           _BLF        __dMul,??__dMul??rT
   \   000000EA   321C               MOV         R2,R6
   \   000000EC   3B1C               MOV         R3,R7
   \   000000EE   ........           _BLF        __dAdd,??__dAdd??rT
   \   000000F2   0CBC               POP         {R2,R3}
   \   000000F4   ........           _BLF        __dAdd,??__dAdd??rT
   \   000000F8   021C               MOV         R2,R0
   \   000000FA   0B1C               MOV         R3,R1
   \   000000FC   03CD               LDMIA       R5!,{R0,R1}
   \   000000FE   083D               SUB         R5,#+8
   \   00000100   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000104   03C5               STMIA       R5!,{R0,R1}
   \   00000106   083D               SUB         R5,#+8
     86          	Quat[1] += K[1][0] * err[0] + K[1][1] * err[1] + K[1][2] * err[2];
   \   00000108   2A1C               MOV         R2,R5
   \   0000010A   0832               ADD         R2,#+8
   \   0000010C   04B4               PUSH        {R2}
   \   0000010E   05A8               ADD         R0,SP,#+20
   \   00000110   0830               ADD         R0,#+8
   \   00000112   2030               ADD         R0,#+32
   \   00000114   0CC8               LDMIA       R0!,{R2,R3}
   \   00000116   201C               MOV         R0,R4
   \   00000118   1030               ADD         R0,#+16
   \   0000011A   03C8               LDMIA       R0!,{R0,R1}
   \   0000011C   ........           _BLF        __dMul,??__dMul??rT
   \   00000120   03B4               PUSH        {R0,R1}
   \   00000122   07A8               ADD         R0,SP,#+28
   \   00000124   0830               ADD         R0,#+8
   \   00000126   1830               ADD         R0,#+24
   \   00000128   0CC8               LDMIA       R0!,{R2,R3}
   \   0000012A   201C               MOV         R0,R4
   \   0000012C   0830               ADD         R0,#+8
   \   0000012E   03C8               LDMIA       R0!,{R0,R1}
   \   00000130   ........           _BLF        __dMul,??__dMul??rT
   \   00000134   061C               MOV         R6,R0
   \   00000136   0F1C               MOV         R7,R1
   \   00000138   07A8               ADD         R0,SP,#+28
   \   0000013A   0830               ADD         R0,#+8
   \   0000013C   1030               ADD         R0,#+16
   \   0000013E   0CC8               LDMIA       R0!,{R2,R3}
   \   00000140   03CC               LDMIA       R4!,{R0,R1}
   \   00000142   083C               SUB         R4,#+8
   \   00000144   ........           _BLF        __dMul,??__dMul??rT
   \   00000148   321C               MOV         R2,R6
   \   0000014A   3B1C               MOV         R3,R7
   \   0000014C   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000150   0CBC               POP         {R2,R3}
   \   00000152   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000156   021C               MOV         R2,R0
   \   00000158   0B1C               MOV         R3,R1
   \   0000015A   281C               MOV         R0,R5
   \   0000015C   0830               ADD         R0,#+8
   \   0000015E   03C8               LDMIA       R0!,{R0,R1}
   \   00000160   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000164   04BC               POP         {R2}
   \   00000166   03C2               STMIA       R2!,{R0,R1}
     87          	Quat[2] += K[2][0] * err[0] + K[2][1] * err[1] + K[2][2] * err[2];	
   \   00000168   2A1C               MOV         R2,R5
   \   0000016A   1032               ADD         R2,#+16
   \   0000016C   04B4               PUSH        {R2}
   \   0000016E   05A8               ADD         R0,SP,#+20
   \   00000170   0830               ADD         R0,#+8
   \   00000172   3830               ADD         R0,#+56
   \   00000174   0CC8               LDMIA       R0!,{R2,R3}
   \   00000176   201C               MOV         R0,R4
   \   00000178   1030               ADD         R0,#+16
   \   0000017A   03C8               LDMIA       R0!,{R0,R1}
   \   0000017C   ........           _BLF        __dMul,??__dMul??rT
   \   00000180   03B4               PUSH        {R0,R1}
   \   00000182   07A8               ADD         R0,SP,#+28
   \   00000184   0830               ADD         R0,#+8
   \   00000186   3030               ADD         R0,#+48
   \   00000188   0CC8               LDMIA       R0!,{R2,R3}
   \   0000018A   201C               MOV         R0,R4
   \   0000018C   0830               ADD         R0,#+8
   \   0000018E   03C8               LDMIA       R0!,{R0,R1}
   \   00000190   ........           _BLF        __dMul,??__dMul??rT
   \   00000194   061C               MOV         R6,R0
   \   00000196   0F1C               MOV         R7,R1
   \   00000198   07A8               ADD         R0,SP,#+28
   \   0000019A   0830               ADD         R0,#+8
   \   0000019C   2830               ADD         R0,#+40
   \   0000019E   0CC8               LDMIA       R0!,{R2,R3}
   \   000001A0   03CC               LDMIA       R4!,{R0,R1}
   \   000001A2   083C               SUB         R4,#+8
   \   000001A4   ........           _BLF        __dMul,??__dMul??rT
   \   000001A8   321C               MOV         R2,R6
   \   000001AA   3B1C               MOV         R3,R7
   \   000001AC   ........           _BLF        __dAdd,??__dAdd??rT
   \   000001B0   0CBC               POP         {R2,R3}
   \   000001B2   ........           _BLF        __dAdd,??__dAdd??rT
   \   000001B6   021C               MOV         R2,R0
   \   000001B8   0B1C               MOV         R3,R1
   \   000001BA   281C               MOV         R0,R5
   \   000001BC   1030               ADD         R0,#+16
   \   000001BE   03C8               LDMIA       R0!,{R0,R1}
   \   000001C0   ........           _BLF        __dAdd,??__dAdd??rT
   \   000001C4   04BC               POP         {R2}
   \   000001C6   03C2               STMIA       R2!,{R0,R1}
     88          	Quat[3] += K[3][0] * err[0] + K[3][1] * err[1] + K[3][2] * err[2];
   \   000001C8   2A1C               MOV         R2,R5
   \   000001CA   1832               ADD         R2,#+24
   \   000001CC   04B4               PUSH        {R2}
   \   000001CE   05A8               ADD         R0,SP,#+20
   \   000001D0   0830               ADD         R0,#+8
   \   000001D2   5030               ADD         R0,#+80
   \   000001D4   0CC8               LDMIA       R0!,{R2,R3}
   \   000001D6   201C               MOV         R0,R4
   \   000001D8   1030               ADD         R0,#+16
   \   000001DA   03C8               LDMIA       R0!,{R0,R1}
   \   000001DC   ........           _BLF        __dMul,??__dMul??rT
   \   000001E0   03B4               PUSH        {R0,R1}
   \   000001E2   07A8               ADD         R0,SP,#+28
   \   000001E4   0830               ADD         R0,#+8
   \   000001E6   4830               ADD         R0,#+72
   \   000001E8   0CC8               LDMIA       R0!,{R2,R3}
   \   000001EA   201C               MOV         R0,R4
   \   000001EC   0830               ADD         R0,#+8
   \   000001EE   03C8               LDMIA       R0!,{R0,R1}
   \   000001F0   ........           _BLF        __dMul,??__dMul??rT
   \   000001F4   061C               MOV         R6,R0
   \   000001F6   0F1C               MOV         R7,R1
   \   000001F8   07A8               ADD         R0,SP,#+28
   \   000001FA   0830               ADD         R0,#+8
   \   000001FC   4030               ADD         R0,#+64
   \   000001FE   0CC8               LDMIA       R0!,{R2,R3}
   \   00000200   03CC               LDMIA       R4!,{R0,R1}
   \   00000202   083C               SUB         R4,#+8
   \   00000204   ........           _BLF        __dMul,??__dMul??rT
   \   00000208   321C               MOV         R2,R6
   \   0000020A   3B1C               MOV         R3,R7
   \   0000020C   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000210   0CBC               POP         {R2,R3}
   \   00000212   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000216   021C               MOV         R2,R0
   \   00000218   0B1C               MOV         R3,R1
   \   0000021A   281C               MOV         R0,R5
   \   0000021C   1830               ADD         R0,#+24
   \   0000021E   03C8               LDMIA       R0!,{R0,R1}
   \   00000220   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000224   04BC               POP         {R2}
   \   00000226   03C2               STMIA       R2!,{R0,R1}
     89          	bias[0] += K[4][0] * err[0] + K[4][1] * err[1] + K[4][2] * err[2];
   \   00000228   2A1C               MOV         R2,R5
   \   0000022A   2032               ADD         R2,#+32
   \   0000022C   04B4               PUSH        {R2}
   \   0000022E   05A8               ADD         R0,SP,#+20
   \   00000230   0830               ADD         R0,#+8
   \   00000232   6830               ADD         R0,#+104
   \   00000234   0CC8               LDMIA       R0!,{R2,R3}
   \   00000236   201C               MOV         R0,R4
   \   00000238   1030               ADD         R0,#+16
   \   0000023A   03C8               LDMIA       R0!,{R0,R1}
   \   0000023C   ........           _BLF        __dMul,??__dMul??rT
   \   00000240   03B4               PUSH        {R0,R1}
   \   00000242   07A8               ADD         R0,SP,#+28
   \   00000244   0830               ADD         R0,#+8
   \   00000246   6030               ADD         R0,#+96
   \   00000248   0CC8               LDMIA       R0!,{R2,R3}
   \   0000024A   201C               MOV         R0,R4
   \   0000024C   0830               ADD         R0,#+8
   \   0000024E   03C8               LDMIA       R0!,{R0,R1}
   \   00000250   ........           _BLF        __dMul,??__dMul??rT
   \   00000254   061C               MOV         R6,R0
   \   00000256   0F1C               MOV         R7,R1
   \   00000258   07A8               ADD         R0,SP,#+28
   \   0000025A   0830               ADD         R0,#+8
   \   0000025C   5830               ADD         R0,#+88
   \   0000025E   0CC8               LDMIA       R0!,{R2,R3}
   \   00000260   03CC               LDMIA       R4!,{R0,R1}
   \   00000262   083C               SUB         R4,#+8
   \   00000264   ........           _BLF        __dMul,??__dMul??rT
   \   00000268   321C               MOV         R2,R6
   \   0000026A   3B1C               MOV         R3,R7
   \   0000026C   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000270   0CBC               POP         {R2,R3}
   \   00000272   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000276   021C               MOV         R2,R0
   \   00000278   0B1C               MOV         R3,R1
   \   0000027A   281C               MOV         R0,R5
   \   0000027C   2030               ADD         R0,#+32
   \   0000027E   03C8               LDMIA       R0!,{R0,R1}
   \   00000280   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000284   04BC               POP         {R2}
   \   00000286   03C2               STMIA       R2!,{R0,R1}
     90          	bias[1] += K[5][0] * err[0] + K[5][1] * err[1] + K[5][2] * err[2];
   \   00000288   2A1C               MOV         R2,R5
   \   0000028A   2832               ADD         R2,#+40
   \   0000028C   04B4               PUSH        {R2}
   \   0000028E   05A8               ADD         R0,SP,#+20
   \   00000290   8830               ADD         R0,#+136
   \   00000292   0CC8               LDMIA       R0!,{R2,R3}
   \   00000294   201C               MOV         R0,R4
   \   00000296   1030               ADD         R0,#+16
   \   00000298   03C8               LDMIA       R0!,{R0,R1}
   \   0000029A   ........           _BLF        __dMul,??__dMul??rT
   \   0000029E   03B4               PUSH        {R0,R1}
   \   000002A0   07A8               ADD         R0,SP,#+28
   \   000002A2   0830               ADD         R0,#+8
   \   000002A4   7830               ADD         R0,#+120
   \   000002A6   0CC8               LDMIA       R0!,{R2,R3}
   \   000002A8   201C               MOV         R0,R4
   \   000002AA   0830               ADD         R0,#+8
   \   000002AC   03C8               LDMIA       R0!,{R0,R1}
   \   000002AE   ........           _BLF        __dMul,??__dMul??rT
   \   000002B2   061C               MOV         R6,R0
   \   000002B4   0F1C               MOV         R7,R1
   \   000002B6   07A8               ADD         R0,SP,#+28
   \   000002B8   0830               ADD         R0,#+8
   \   000002BA   7030               ADD         R0,#+112
   \   000002BC   0CC8               LDMIA       R0!,{R2,R3}
   \   000002BE   03CC               LDMIA       R4!,{R0,R1}
   \   000002C0   083C               SUB         R4,#+8
   \   000002C2   ........           _BLF        __dMul,??__dMul??rT
   \   000002C6   321C               MOV         R2,R6
   \   000002C8   3B1C               MOV         R3,R7
   \   000002CA   ........           _BLF        __dAdd,??__dAdd??rT
   \   000002CE   0CBC               POP         {R2,R3}
   \   000002D0   ........           _BLF        __dAdd,??__dAdd??rT
   \   000002D4   021C               MOV         R2,R0
   \   000002D6   0B1C               MOV         R3,R1
   \   000002D8   281C               MOV         R0,R5
   \   000002DA   2830               ADD         R0,#+40
   \   000002DC   03C8               LDMIA       R0!,{R0,R1}
   \   000002DE   ........           _BLF        __dAdd,??__dAdd??rT
   \   000002E2   04BC               POP         {R2}
   \   000002E4   03C2               STMIA       R2!,{R0,R1}
     91          	bias[2] += K[6][0] * err[0] + K[6][1] * err[1] + K[6][2] * err[2];
   \   000002E6   2A1C               MOV         R2,R5
   \   000002E8   3032               ADD         R2,#+48
   \   000002EA   04B4               PUSH        {R2}
   \   000002EC   05A8               ADD         R0,SP,#+20
   \   000002EE   8830               ADD         R0,#+136
   \   000002F0   1830               ADD         R0,#+24
   \   000002F2   0CC8               LDMIA       R0!,{R2,R3}
   \   000002F4   201C               MOV         R0,R4
   \   000002F6   1030               ADD         R0,#+16
   \   000002F8   03C8               LDMIA       R0!,{R0,R1}
   \   000002FA   ........           _BLF        __dMul,??__dMul??rT
   \   000002FE   03B4               PUSH        {R0,R1}
   \   00000300   07A8               ADD         R0,SP,#+28
   \   00000302   8830               ADD         R0,#+136
   \   00000304   1030               ADD         R0,#+16
   \   00000306   0CC8               LDMIA       R0!,{R2,R3}
   \   00000308   201C               MOV         R0,R4
   \   0000030A   0830               ADD         R0,#+8
   \   0000030C   03C8               LDMIA       R0!,{R0,R1}
   \   0000030E   ........           _BLF        __dMul,??__dMul??rT
   \   00000312   061C               MOV         R6,R0
   \   00000314   0F1C               MOV         R7,R1
   \   00000316   07A8               ADD         R0,SP,#+28
   \   00000318   8830               ADD         R0,#+136
   \   0000031A   0830               ADD         R0,#+8
   \   0000031C   0CC8               LDMIA       R0!,{R2,R3}
   \   0000031E   03CC               LDMIA       R4!,{R0,R1}
   \   00000320   ........           _BLF        __dMul,??__dMul??rT
   \   00000324   321C               MOV         R2,R6
   \   00000326   3B1C               MOV         R3,R7
   \   00000328   ........           _BLF        __dAdd,??__dAdd??rT
   \   0000032C   0CBC               POP         {R2,R3}
   \   0000032E   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000332   021C               MOV         R2,R0
   \   00000334   0B1C               MOV         R3,R1
   \   00000336   281C               MOV         R0,R5
   \   00000338   3030               ADD         R0,#+48
   \   0000033A   03C8               LDMIA       R0!,{R0,R1}
   \   0000033C   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000340   04BC               POP         {R2}
   \   00000342   03C2               STMIA       R2!,{R0,R1}
     92            
     93             mulNxM( temp, c, P, 3, 7, 7, 0, 0 );   //C*P
   \   00000344   0023               MOV         R3,#+0
   \   00000346   1A1C               MOV         R2,R3
   \   00000348   0721               MOV         R1,#+7
   \   0000034A   081C               MOV         R0,R1
   \   0000034C   0FB4               PUSH        {R0-R3}
   \   0000034E   0323               MOV         R3,#+3
   \   00000350   2A1C               MOV         R2,R5
   \   00000352   3832               ADD         R2,#+56
   \   00000354   6E99               LDR         R1,[SP, #+440]
   \   00000356   44A8               ADD         R0,SP,#+272
   \   00000358   ........           _BLF        ??mulNxM,??mulNxM??rT
     94            /*for(i=0;i<3;i++)
     95              for(j=0;j<7;j++)
     96               for(l=0;l<7;l++)
     97                temp[i][j] +=  c[i][l]*P[l][j];*/
     98           
     99          	
    100          	mulNxM( P, K, temp, 7, 3, 7, 0, -1);   //P -=K*(C*P)
   \   0000035C   0023               MOV         R3,#+0
   \   0000035E   DB43               MVN         R3,R3              ;; #-1
   \   00000360   0022               MOV         R2,#+0
   \   00000362   0721               MOV         R1,#+7
   \   00000364   0320               MOV         R0,#+3
   \   00000366   0FB4               PUSH        {R0-R3}
   \   00000368   0B1C               MOV         R3,R1
   \   0000036A   48AA               ADD         R2,SP,#+288
   \   0000036C   0CA9               ADD         R1,SP,#+48
   \   0000036E   3835               ADD         R5,#+56
   \   00000370   281C               MOV         R0,R5
   \   00000372   ........           _BLF        ??mulNxM,??mulNxM??rT
   \   00000376   0CB0               ADD         SP,#+48
    101            /*for(i=0;i<7;i++)
    102              for(j=0;j<7;j++)
    103               for(l=0;l<3;l++)
    104                   P[i][j]-=K[i][l]*temp[l][j];//P -=K*(C*P)*/
    105            
    106          }
   \   00000378   67B0               ADD         SP,#+412
   \   0000037A   ........           BL          ?Subroutine4
   \   0000037E   C046               NOP         
   \                     ??Kalman_1:
   \   00000380   ........           DC32        R_attitude

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine4:
   \   00000000   F0BC               POP         {R4-R7}
   \   00000002   01BC               POP         {R0}
   \   00000004   0047               BX          R0                 ;; return
   \   00000006   C046               NOP         
   \                     ??Subroutine4_0:
   \   00000008   0000E03F           DC32        0x3fe00000
   \   0000000C   548CF337           DC32        0x37f38c54
   \   00000010   A110A13F           DC32        0x3fa110a1
   \   00000014   0000E03F           DC32        0x3fe00000
   \   00000018   548CF337           DC32        0x37f38c54
   \   0000001C   A110A13F           DC32        0x3fa110a1
   \   00000020   0000E03F           DC32        0x3fe00000
   \   00000024   548CF337           DC32        0x37f38c54
   \   00000028   A110A13F           DC32        0x3fa110a1
   \   0000002C   0000E03F           DC32        0x3fe00000
   \   00000030   548CF337           DC32        0x37f38c54
   \   00000034   A110A13F           DC32        0x3fa110a1
   \   00000038   ........           DC32        Q
   \   0000003C   ........           DC32        Quat + 56
   \   00000040   ........           DC32        Quat + 56
   \   00000044   ........           DC32        Quat + 56
   \   00000048   548CF337           DC32        0x37f38c54
   \   0000004C   A110A13F           DC32        0x3fa110a1
   \   00000050   ........           DC32        Quat + 448
    107          
    108          /*--------------------------------------------------------------------------------------*/ 
    109          
    110          /*--------------------------------------------------------------------------------------*/ 

   \                                 In segment CODE, align 4, keep-with-next
    111          void ahrs_init(void)
    112          {
   \                     ??ahrs_init:
   \   00000000   30B5               PUSH        {R4,R5,LR}
    113          	accel2euler( ahrs_theta, imu_accel, ahrs_compass );
   \   00000002   ....               LDR         R4,??DataTable1    ;; Quat
   \   00000004   E020               MOV         R0,#+224
   \   00000006   4000               LSL         R0,R0,#+1          ;; #+448
   \   00000008   2518               ADD         R5,R4,R0
   \   0000000A   ....               LDR         R2,??DataTable2    ;; ahrs_compass
   \   0000000C   0E49               LDR         R1,??ahrs_init_1   ;; imu_accel
   \   0000000E   281C               MOV         R0,R5
   \   00000010   ........           _BLF        ??accel2euler,??accel2euler??rT
    114          
    115          	euler2quat( Quat, ahrs_theta );
   \   00000014   291C               MOV         R1,R5
   \   00000016   201C               MOV         R0,R4
   \   00000018   ........           _BLF        ??euler2quat,??euler2quat??rT
    116          	
    117          	norm( Quat );
   \   0000001C   201C               MOV         R0,R4
   \   0000001E   ........           _BLF        ??norm,??norm??rT
    118          	
    119          	//printf("INIT_q0=%f\tq1=%f\tq2=%f\tq3=%f\n",quat[0],quat[1],quat[2],quat[3] );
    120          	bias[0] = ahrs_pqr[0];
   \   00000022   ....               LDR         R2,??DataTable3    ;; ahrs_pqr
   \   00000024   231C               MOV         R3,R4
   \   00000026   2033               ADD         R3,#+32
   \   00000028   03CA               LDMIA       R2!,{R0,R1}
   \   0000002A   083A               SUB         R2,#+8
   \   0000002C   03C3               STMIA       R3!,{R0,R1}
    121          	bias[1] = ahrs_pqr[1];
   \   0000002E   231C               MOV         R3,R4
   \   00000030   2833               ADD         R3,#+40
   \   00000032   101C               MOV         R0,R2
   \   00000034   0830               ADD         R0,#+8
   \   00000036   03C8               LDMIA       R0!,{R0,R1}
   \   00000038   03C3               STMIA       R3!,{R0,R1}
    122          	bias[2] = ahrs_pqr[2];
   \   0000003A   3034               ADD         R4,#+48
   \   0000003C   1032               ADD         R2,#+16
   \   0000003E   03CA               LDMIA       R2!,{R0,R1}
   \   00000040   03C4               STMIA       R4!,{R0,R1}
    123          }
   \   00000042   30BC               POP         {R4,R5}
   \   00000044   01BC               POP         {R0}
   \   00000046   0047               BX          R0                 ;; return
   \                     ??ahrs_init_1:
   \   00000048   ........           DC32        imu_accel
    124          
    125          /*--------------------------------------------------------------------------------------*/ 
    126          
    127          /*--------------------------------------------------------------------------------------*/ 

   \                                 In segment CODE, align 4, keep-with-next
    128          void kalman_attitude_update( void)
    129          {
   \                     ??kalman_attitude_update:
   \   00000000   70B5               PUSH        {R4-R6,LR}
   \   00000002   BCB0               SUB         SP,#+240
    130            double			err;
    131            //THETAm( my2_accel2euler( accel, THETAe[2] ) );
    132            // make the C matrix
    133             double 		C[3][7];
    134            double THETAm[3];
    135            double THETAe[3];
    136            accel2euler( THETAm , ahrs_accel, ahrs_compass ); 
   \   00000004   DA4A               LDR         R2,??kalman_attitude_update_1+0x4  ;; ahrs_compass
   \   00000006   D949               LDR         R1,??kalman_attitude_update_1  ;; ahrs_accel
   \   00000008   04A8               ADD         R0,SP,#+16
   \   0000000A   ........           _BLF        ??accel2euler,??accel2euler??rT
   \   0000000E   DA49               LDR         R1,??kalman_attitude_update_1+0xC  ;; Quat
   \   00000010   D848               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
    137            quat2DCM( DCM, Quat );
   \   00000012   ........           _BLF        ??quat2DCM,??quat2DCM??rT
    138            quat2euler( THETAe, Quat );
   \   00000016   D849               LDR         R1,??kalman_attitude_update_1+0xC  ;; Quat
   \   00000018   36A8               ADD         R0,SP,#+216
   \   0000001A   ........           _BLF        ??quat2euler,??quat2euler??rT
    139            
    140            // compute the error; this should be ( THETAm - THETAe ),
    141          	// but we can only use the pitch and roll angles here
    142            THETAm[0] -= THETAe[0];
   \   0000001E   04AE               ADD         R6,SP,#+16
   \   00000020   04A8               ADD         R0,SP,#+16
   \   00000022   03C8               LDMIA       R0!,{R0,R1}
   \   00000024   36AA               ADD         R2,SP,#+216
   \   00000026   0CCA               LDMIA       R2!,{R2,R3}
   \   00000028   ........           _BLF        __dSub,??__dSub??rT
   \   0000002C   03C6               STMIA       R6!,{R0,R1}
    143            THETAm[1] -= THETAe[1];
   \   0000002E   04AE               ADD         R6,SP,#+16
   \   00000030   0836               ADD         R6,#+8
   \   00000032   04A8               ADD         R0,SP,#+16
   \   00000034   0830               ADD         R0,#+8
   \   00000036   03C8               LDMIA       R0!,{R0,R1}
   \   00000038   36AA               ADD         R2,SP,#+216
   \   0000003A   0832               ADD         R2,#+8
   \   0000003C   0CCA               LDMIA       R2!,{R2,R3}
   \   0000003E   ........           _BLF        __dSub,??__dSub??rT
   \   00000042   03C6               STMIA       R6!,{R0,R1}
    144            THETAm[2] -= THETAe[2];
   \   00000044   04A8               ADD         R0,SP,#+16
   \   00000046   1030               ADD         R0,#+16
   \   00000048   03C8               LDMIA       R0!,{R0,R1}
   \   0000004A   36AA               ADD         R2,SP,#+216
   \   0000004C   1032               ADD         R2,#+16
   \   0000004E   0CCA               LDMIA       R2!,{R2,R3}
   \   00000050   ........           _BLF        __dSub,??__dSub??rT
   \   00000054   041C               MOV         R4,R0
   \   00000056   0D1C               MOV         R5,R1
   \   00000058   04A8               ADD         R0,SP,#+16
   \   0000005A   1030               ADD         R0,#+16
   \   0000005C   30C0               STMIA       R0!,{R4,R5}
    145                    
    146            if( THETAm[2] > C_PI )
   \   0000005E   201C               MOV         R0,R4
   \   00000060   C64A               LDR         R2,??kalman_attitude_update_1+0x10  ;; 0x54442d19
   \   00000062   C74B               LDR         R3,??kalman_attitude_update_1+0x14  ;; 0x400921fb
   \   00000064   ........           _BLF        __dGreaterEqual,??__dGreaterEqual??rT
   \   00000068   0028               CMP         R0,#+0
   \   0000006A   04D0               BEQ         ??kalman_attitude_update_2
    147          		THETAm[2] -= 2.0 * C_PI;
   \   0000006C   04AE               ADD         R6,SP,#+16
   \   0000006E   1036               ADD         R6,#+16
   \   00000070   C448               LDR         R0,??kalman_attitude_update_1+0x18  ;; 0x54442d18
   \   00000072   C549               LDR         R1,??kalman_attitude_update_1+0x1C  ;; 0xc01921fb
   \   00000074   0BE0               B           ??kalman_attitude_update_3
    148             else
    149               if( THETAm[2] < -C_PI )
   \                     ??kalman_attitude_update_2:
   \   00000076   201C               MOV         R0,R4
   \   00000078   291C               MOV         R1,R5
   \   0000007A   C24A               LDR         R2,??kalman_attitude_update_1+0x18  ;; 0x54442d18
   \   0000007C   C34B               LDR         R3,??kalman_attitude_update_1+0x20  ;; 0xc00921fb
   \   0000007E   ........           _BLF        __dLess,??__dLess??rT
   \   00000082   0028               CMP         R0,#+0
   \   00000084   08D0               BEQ         ??kalman_attitude_update_4
    150          	THETAm[2] += 2.0 * C_PI;
   \   00000086   04AE               ADD         R6,SP,#+16
   \   00000088   1036               ADD         R6,#+16
   \   0000008A   BE48               LDR         R0,??kalman_attitude_update_1+0x18  ;; 0x54442d18
   \   0000008C   C049               LDR         R1,??kalman_attitude_update_1+0x24  ;; 0x401921fb
   \                     ??kalman_attitude_update_3:
   \   0000008E   221C               MOV         R2,R4
   \   00000090   2B1C               MOV         R3,R5
   \   00000092   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000096   03C6               STMIA       R6!,{R0,R1}
   \                     ??kalman_attitude_update_4:
   \   00000098   6E46               MOV         R6,SP
   \   0000009A   BE48               LDR         R0,??kalman_attitude_update_1+0x28  ;; DCM + 40
   \   0000009C   0CC8               LDMIA       R0!,{R2,R3}
   \   0000009E   BD48               LDR         R0,??kalman_attitude_update_1+0x28  ;; DCM + 40
   \   000000A0   03C8               LDMIA       R0!,{R0,R1}
   \   000000A2   ........           _BLF        __dMul,??__dMul??rT
   \   000000A6   041C               MOV         R4,R0
   \   000000A8   0D1C               MOV         R5,R1
   \   000000AA   BB48               LDR         R0,??kalman_attitude_update_1+0x2C  ;; DCM + 64
   \   000000AC   0CC8               LDMIA       R0!,{R2,R3}
   \   000000AE   BA48               LDR         R0,??kalman_attitude_update_1+0x2C  ;; DCM + 64
   \   000000B0   03C8               LDMIA       R0!,{R0,R1}
   \   000000B2   ........           _BLF        __dMul,??__dMul??rT
   \   000000B6   221C               MOV         R2,R4
   \   000000B8   2B1C               MOV         R3,R5
   \   000000BA   ........           _BLF        __dAdd,??__dAdd??rT
   \   000000BE   021C               MOV         R2,R0
   \   000000C0   0B1C               MOV         R3,R1
   \   000000C2   0020               MOV         R0,#+0
   \   000000C4   8021               MOV         R1,#+128
   \   000000C6   C905               LSL         R1,R1,#+23         ;; #+1073741824
   \   000000C8   ........           _BLF        __dDiv,??__dDiv??rT
   \   000000CC   03C6               STMIA       R6!,{R0,R1}
   \   000000CE   0CAE               ADD         R6,SP,#+48
   \   000000D0   ....               LDR         R0,??DataTable13   ;; Quat + 8
   \   000000D2   0CC8               LDMIA       R0!,{R2,R3}
   \   000000D4   B048               LDR         R0,??kalman_attitude_update_1+0x2C  ;; DCM + 64
   \   000000D6   03C8               LDMIA       R0!,{R0,R1}
   \   000000D8   ........           _BLF        __dMul,??__dMul??rT
   \   000000DC   6A46               MOV         R2,SP
   \   000000DE   0CCA               LDMIA       R2!,{R2,R3}
   \   000000E0   ........           _BLF        __dMul,??__dMul??rT
   \   000000E4   03C6               STMIA       R6!,{R0,R1}
    151            
    152           
    153          	// PHI section
    154          	err = 2.0 / ( (DCM[2][2]*DCM[2][2]) + (DCM[1][2]*DCM[1][2]) );
    155          
    156          	C[0][0] = ( Quat[1] * DCM[2][2]                            ) * err;
    157          	C[0][1] = ( Quat[0] * DCM[2][2] + 2.0 * Quat[1] * DCM[1][2] ) * err;
   \   000000E6   02AE               ADD         R6,SP,#+8
   \   000000E8   ....               LDR         R0,??DataTable13   ;; Quat + 8
   \   000000EA   0CC8               LDMIA       R0!,{R2,R3}
   \   000000EC   0020               MOV         R0,#+0
   \   000000EE   8021               MOV         R1,#+128
   \   000000F0   C905               LSL         R1,R1,#+23         ;; #+1073741824
   \   000000F2   ........           _BLF        __dMul,??__dMul??rT
   \   000000F6   03C6               STMIA       R6!,{R0,R1}
   \   000000F8   0CAE               ADD         R6,SP,#+48
   \   000000FA   0836               ADD         R6,#+8
   \   000000FC   02A8               ADD         R0,SP,#+8
   \   000000FE   0CC8               LDMIA       R0!,{R2,R3}
   \   00000100   A448               LDR         R0,??kalman_attitude_update_1+0x28  ;; DCM + 40
   \   00000102   03C8               LDMIA       R0!,{R0,R1}
   \   00000104   ........           _BLF        __dMul,??__dMul??rT
   \   00000108   041C               MOV         R4,R0
   \   0000010A   0D1C               MOV         R5,R1
   \   0000010C   9A48               LDR         R0,??kalman_attitude_update_1+0xC  ;; Quat
   \   0000010E   0CC8               LDMIA       R0!,{R2,R3}
   \   00000110   A148               LDR         R0,??kalman_attitude_update_1+0x2C  ;; DCM + 64
   \   00000112   03C8               LDMIA       R0!,{R0,R1}
   \   00000114   ........           _BLF        __dMul,??__dMul??rT
   \   00000118   221C               MOV         R2,R4
   \   0000011A   2B1C               MOV         R3,R5
   \   0000011C   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000120   6A46               MOV         R2,SP
   \   00000122   0CCA               LDMIA       R2!,{R2,R3}
   \   00000124   ........           _BLF        __dMul,??__dMul??rT
   \   00000128   03C6               STMIA       R6!,{R0,R1}
   \   0000012A   0AAE               ADD         R6,SP,#+40
   \   0000012C   ....               LDR         R0,??DataTable12   ;; Quat + 16
   \   0000012E   0CC8               LDMIA       R0!,{R2,R3}
   \   00000130   0020               MOV         R0,#+0
   \   00000132   8021               MOV         R1,#+128
   \   00000134   C905               LSL         R1,R1,#+23         ;; #+1073741824
   \   00000136   ........           _BLF        __dMul,??__dMul??rT
   \   0000013A   03C6               STMIA       R6!,{R0,R1}
   \   0000013C   0836               ADD         R6,#+8
   \   0000013E   0836               ADD         R6,#+8
   \   00000140   0AA8               ADD         R0,SP,#+40
   \   00000142   0CC8               LDMIA       R0!,{R2,R3}
   \   00000144   9348               LDR         R0,??kalman_attitude_update_1+0x28  ;; DCM + 40
   \   00000146   03C8               LDMIA       R0!,{R0,R1}
   \   00000148   ........           _BLF        __dMul,??__dMul??rT
   \   0000014C   041C               MOV         R4,R0
   \   0000014E   0D1C               MOV         R5,R1
   \   00000150   ....               LDR         R0,??DataTable11   ;; Quat + 24
   \   00000152   0CC8               LDMIA       R0!,{R2,R3}
   \   00000154   9048               LDR         R0,??kalman_attitude_update_1+0x2C  ;; DCM + 64
   \   00000156   03C8               LDMIA       R0!,{R0,R1}
   \   00000158   ........           _BLF        __dMul,??__dMul??rT
   \   0000015C   221C               MOV         R2,R4
   \   0000015E   2B1C               MOV         R3,R5
   \   00000160   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000164   6A46               MOV         R2,SP
   \   00000166   0CCA               LDMIA       R2!,{R2,R3}
   \   00000168   ........           _BLF        __dMul,??__dMul??rT
   \   0000016C   03C6               STMIA       R6!,{R0,R1}
    158          	C[0][2] = ( Quat[3] * DCM[2][2] + 2.0 * Quat[2] * DCM[1][2] ) * err;
    159          	C[0][3] = ( Quat[2] * DCM[2][2]                            ) * err;
   \   0000016E   0CAE               ADD         R6,SP,#+48
   \   00000170   0836               ADD         R6,#+8
   \   00000172   1036               ADD         R6,#+16
   \   00000174   ....               LDR         R0,??DataTable12   ;; Quat + 16
   \   00000176   0CC8               LDMIA       R0!,{R2,R3}
   \   00000178   8748               LDR         R0,??kalman_attitude_update_1+0x2C  ;; DCM + 64
   \   0000017A   03C8               LDMIA       R0!,{R0,R1}
   \   0000017C   ........           _BLF        __dMul,??__dMul??rT
   \   00000180   6A46               MOV         R2,SP
   \   00000182   0CCA               LDMIA       R2!,{R2,R3}
   \   00000184   ........           _BLF        __dMul,??__dMul??rT
   \   00000188   03C6               STMIA       R6!,{R0,R1}
   \   0000018A   0CAA               ADD         R2,SP,#+48
   \   0000018C   0832               ADD         R2,#+8
   \   0000018E   1832               ADD         R2,#+24
   \   00000190   0020               MOV         R0,#+0
   \   00000192   0021               MOV         R1,#+0
   \   00000194   03C2               STMIA       R2!,{R0,R1}
    160          	C[0][4] = 0.0;
    161          	C[0][5] = 0.0;
   \   00000196   0CAA               ADD         R2,SP,#+48
   \   00000198   0832               ADD         R2,#+8
   \   0000019A   2032               ADD         R2,#+32
   \   0000019C   03C2               STMIA       R2!,{R0,R1}
    162          	C[0][6] = 0.0;
   \   0000019E   0CAA               ADD         R2,SP,#+48
   \   000001A0   0832               ADD         R2,#+8
   \   000001A2   2832               ADD         R2,#+40
   \   000001A4   03C2               STMIA       R2!,{R0,R1}
    163          
    164          	// THETA section
    165          	err = -1.0 / sqrt(1.0 - (DCM[0][2]*DCM[0][2]) );
   \   000001A6   7D48               LDR         R0,??kalman_attitude_update_1+0x30  ;; DCM + 16
   \   000001A8   03C8               LDMIA       R0!,{R0,R1}
   \   000001AA   021C               MOV         R2,R0
   \   000001AC   0B1C               MOV         R3,R1
   \   000001AE   ........           _BLF        __dMul,??__dMul??rT
   \   000001B2   021C               MOV         R2,R0
   \   000001B4   0B1C               MOV         R3,R1
   \   000001B6   0020               MOV         R0,#+0
   \   000001B8   7949               LDR         R1,??kalman_attitude_update_1+0x34  ;; 0x3ff00000
   \   000001BA   ........           _BLF        __dSub,??__dSub??rT
   \   000001BE   ........           _BLF        sqrt,??sqrt??rT
   \   000001C2   021C               MOV         R2,R0
   \   000001C4   0B1C               MOV         R3,R1
   \   000001C6   0020               MOV         R0,#+0
   \   000001C8   7649               LDR         R1,??kalman_attitude_update_1+0x38  ;; 0xbff00000
   \   000001CA   ........           _BLF        __dDiv,??__dDiv??rT
   \   000001CE   041C               MOV         R4,R0
   \   000001D0   0D1C               MOV         R5,R1
    166          
    167          	C[1][0] = -2.0 * Quat[2] * err;
   \   000001D2   0CAE               ADD         R6,SP,#+48
   \   000001D4   0836               ADD         R6,#+8
   \   000001D6   3036               ADD         R6,#+48
   \   000001D8   ....               LDR         R0,??DataTable12   ;; Quat + 16
   \   000001DA   03C8               LDMIA       R0!,{R0,R1}
   \   000001DC   0022               MOV         R2,#+0
   \   000001DE   C023               MOV         R3,#+192
   \   000001E0   1B06               LSL         R3,R3,#+24         ;; #-1073741824
   \   000001E2   ........           _BLF        __dMul,??__dMul??rT
   \   000001E6   221C               MOV         R2,R4
   \   000001E8   2B1C               MOV         R3,R5
   \   000001EA   ........           _BLF        __dMul,??__dMul??rT
   \   000001EE   03C6               STMIA       R6!,{R0,R1}
    168          	C[1][1] =  2.0 * Quat[3] * err;
   \   000001F0   6E46               MOV         R6,SP
   \   000001F2   ....               LDR         R0,??DataTable11   ;; Quat + 24
   \   000001F4   03C8               LDMIA       R0!,{R0,R1}
   \   000001F6   0022               MOV         R2,#+0
   \   000001F8   8023               MOV         R3,#+128
   \   000001FA   DB05               LSL         R3,R3,#+23         ;; #+1073741824
   \   000001FC   ........           _BLF        __dMul,??__dMul??rT
   \   00000200   03C6               STMIA       R6!,{R0,R1}
   \   00000202   0CAE               ADD         R6,SP,#+48
   \   00000204   0836               ADD         R6,#+8
   \   00000206   3836               ADD         R6,#+56
   \   00000208   6846               MOV         R0,SP
   \   0000020A   03C8               LDMIA       R0!,{R0,R1}
   \   0000020C   221C               MOV         R2,R4
   \   0000020E   2B1C               MOV         R3,R5
   \   00000210   ........           _BLF        __dMul,??__dMul??rT
   \   00000214   03C6               STMIA       R6!,{R0,R1}
    169          	C[1][2] = -2.0 * Quat[0] * err;
   \   00000216   0CAE               ADD         R6,SP,#+48
   \   00000218   0836               ADD         R6,#+8
   \   0000021A   4036               ADD         R6,#+64
   \   0000021C   5648               LDR         R0,??kalman_attitude_update_1+0xC  ;; Quat
   \   0000021E   03C8               LDMIA       R0!,{R0,R1}
   \   00000220   0022               MOV         R2,#+0
   \   00000222   C023               MOV         R3,#+192
   \   00000224   1B06               LSL         R3,R3,#+24         ;; #-1073741824
   \   00000226   ........           _BLF        __dMul,??__dMul??rT
   \   0000022A   221C               MOV         R2,R4
   \   0000022C   2B1C               MOV         R3,R5
   \   0000022E   ........           _BLF        __dMul,??__dMul??rT
   \   00000232   03C6               STMIA       R6!,{R0,R1}
    170          	C[1][3] =  2.0 * Quat[1] * err;
   \   00000234   0CAE               ADD         R6,SP,#+48
   \   00000236   0836               ADD         R6,#+8
   \   00000238   4836               ADD         R6,#+72
   \   0000023A   02A8               ADD         R0,SP,#+8
   \   0000023C   03C8               LDMIA       R0!,{R0,R1}
   \   0000023E   221C               MOV         R2,R4
   \   00000240   2B1C               MOV         R3,R5
   \   00000242   ........           _BLF        __dMul,??__dMul??rT
   \   00000246   03C6               STMIA       R6!,{R0,R1}
    171          	C[1][4] = 0.0;
   \   00000248   0CAA               ADD         R2,SP,#+48
   \   0000024A   0832               ADD         R2,#+8
   \   0000024C   5032               ADD         R2,#+80
   \   0000024E   0020               MOV         R0,#+0
   \   00000250   011C               MOV         R1,R0
   \   00000252   03C2               STMIA       R2!,{R0,R1}
    172          	C[1][5] = 0.0;
   \   00000254   0CAA               ADD         R2,SP,#+48
   \   00000256   0832               ADD         R2,#+8
   \   00000258   5832               ADD         R2,#+88
   \   0000025A   03C2               STMIA       R2!,{R0,R1}
    173          	C[1][6] = 0.0;
   \   0000025C   0CAA               ADD         R2,SP,#+48
   \   0000025E   0832               ADD         R2,#+8
   \   00000260   6032               ADD         R2,#+96
   \   00000262   03C2               STMIA       R2!,{R0,R1}
   \   00000264   02AE               ADD         R6,SP,#+8
   \   00000266   5048               LDR         R0,??kalman_attitude_update_1+0x3C  ;; DCM + 8
   \   00000268   0CC8               LDMIA       R0!,{R2,R3}
   \   0000026A   4F48               LDR         R0,??kalman_attitude_update_1+0x3C  ;; DCM + 8
   \   0000026C   03C8               LDMIA       R0!,{R0,R1}
   \   0000026E   ........           _BLF        __dMul,??__dMul??rT
   \   00000272   041C               MOV         R4,R0
   \   00000274   0D1C               MOV         R5,R1
   \   00000276   3F48               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
   \   00000278   0CC8               LDMIA       R0!,{R2,R3}
   \   0000027A   3E48               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
   \   0000027C   03C8               LDMIA       R0!,{R0,R1}
   \   0000027E   ........           _BLF        __dMul,??__dMul??rT
   \   00000282   221C               MOV         R2,R4
   \   00000284   2B1C               MOV         R3,R5
   \   00000286   ........           _BLF        __dAdd,??__dAdd??rT
   \   0000028A   021C               MOV         R2,R0
   \   0000028C   0B1C               MOV         R3,R1
   \   0000028E   0020               MOV         R0,#+0
   \   00000290   8021               MOV         R1,#+128
   \   00000292   C905               LSL         R1,R1,#+23         ;; #+1073741824
   \   00000294   ........           _BLF        __dDiv,??__dDiv??rT
   \   00000298   03C6               STMIA       R6!,{R0,R1}
    174                   
    175                  // PSI section
    176          	err = 2.0 / ((DCM[0][0]*DCM[0][0]) + (DCM[0][1]*DCM[0][1]));
    177          	C[2][0] = err * ( Quat[3] * DCM[0][0] );
   \   0000029A   0CAE               ADD         R6,SP,#+48
   \   0000029C   0836               ADD         R6,#+8
   \   0000029E   6836               ADD         R6,#+104
   \   000002A0   ....               LDR         R0,??DataTable11   ;; Quat + 24
   \   000002A2   0CC8               LDMIA       R0!,{R2,R3}
   \   000002A4   3348               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
   \   000002A6   03C8               LDMIA       R0!,{R0,R1}
   \   000002A8   ........           _BLF        __dMul,??__dMul??rT
   \   000002AC   02AA               ADD         R2,SP,#+8
   \   000002AE   0CCA               LDMIA       R2!,{R2,R3}
   \   000002B0   ........           _BLF        __dMul,??__dMul??rT
   \   000002B4   03C6               STMIA       R6!,{R0,R1}
    178          	C[2][1] = err * ( Quat[2] * DCM[0][0] );
   \   000002B6   0CAE               ADD         R6,SP,#+48
   \   000002B8   0836               ADD         R6,#+8
   \   000002BA   7036               ADD         R6,#+112
   \   000002BC   ....               LDR         R0,??DataTable12   ;; Quat + 16
   \   000002BE   0CC8               LDMIA       R0!,{R2,R3}
   \   000002C0   2C48               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
   \   000002C2   03C8               LDMIA       R0!,{R0,R1}
   \   000002C4   ........           _BLF        __dMul,??__dMul??rT
   \   000002C8   02AA               ADD         R2,SP,#+8
   \   000002CA   0CCA               LDMIA       R2!,{R2,R3}
   \   000002CC   ........           _BLF        __dMul,??__dMul??rT
   \   000002D0   03C6               STMIA       R6!,{R0,R1}
    179          	C[2][2] = err * ( Quat[1] * DCM[0][0] + 2.0 * Quat[2] * DCM[0][1] );
   \   000002D2   0CAE               ADD         R6,SP,#+48
   \   000002D4   0836               ADD         R6,#+8
   \   000002D6   7836               ADD         R6,#+120
   \   000002D8   0AA8               ADD         R0,SP,#+40
   \   000002DA   0CC8               LDMIA       R0!,{R2,R3}
   \   000002DC   3248               LDR         R0,??kalman_attitude_update_1+0x3C  ;; DCM + 8
   \   000002DE   03C8               LDMIA       R0!,{R0,R1}
   \   000002E0   ........           _BLF        __dMul,??__dMul??rT
   \   000002E4   041C               MOV         R4,R0
   \   000002E6   0D1C               MOV         R5,R1
   \   000002E8   ....               LDR         R0,??DataTable13   ;; Quat + 8
   \   000002EA   0CC8               LDMIA       R0!,{R2,R3}
   \   000002EC   2148               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
   \   000002EE   03C8               LDMIA       R0!,{R0,R1}
   \   000002F0   ........           _BLF        __dMul,??__dMul??rT
   \   000002F4   221C               MOV         R2,R4
   \   000002F6   2B1C               MOV         R3,R5
   \   000002F8   ........           _BLF        __dAdd,??__dAdd??rT
   \   000002FC   02AA               ADD         R2,SP,#+8
   \   000002FE   0CCA               LDMIA       R2!,{R2,R3}
   \   00000300   ........           _BLF        __dMul,??__dMul??rT
   \   00000304   03C6               STMIA       R6!,{R0,R1}
    180          	C[2][3] = err * ( Quat[0] * DCM[0][0] + 2.0 * Quat[3] * DCM[0][1] );
   \   00000306   0CAE               ADD         R6,SP,#+48
   \   00000308   8836               ADD         R6,#+136
   \   0000030A   6846               MOV         R0,SP
   \   0000030C   0CC8               LDMIA       R0!,{R2,R3}
   \   0000030E   2648               LDR         R0,??kalman_attitude_update_1+0x3C  ;; DCM + 8
   \   00000310   03C8               LDMIA       R0!,{R0,R1}
   \   00000312   ........           _BLF        __dMul,??__dMul??rT
   \   00000316   041C               MOV         R4,R0
   \   00000318   0D1C               MOV         R5,R1
   \   0000031A   1748               LDR         R0,??kalman_attitude_update_1+0xC  ;; Quat
   \   0000031C   0CC8               LDMIA       R0!,{R2,R3}
   \   0000031E   1548               LDR         R0,??kalman_attitude_update_1+0x8  ;; DCM
   \   00000320   03C8               LDMIA       R0!,{R0,R1}
   \   00000322   ........           _BLF        __dMul,??__dMul??rT
   \   00000326   221C               MOV         R2,R4
   \   00000328   2B1C               MOV         R3,R5
   \   0000032A   ........           _BLF        __dAdd,??__dAdd??rT
   \   0000032E   02AA               ADD         R2,SP,#+8
   \   00000330   0CCA               LDMIA       R2!,{R2,R3}
   \   00000332   ........           _BLF        __dMul,??__dMul??rT
   \   00000336   03C6               STMIA       R6!,{R0,R1}
    181                  C[2][4] = 0.0;
   \   00000338   0CAA               ADD         R2,SP,#+48
   \   0000033A   8832               ADD         R2,#+136
   \   0000033C   0832               ADD         R2,#+8
   \   0000033E   0020               MOV         R0,#+0
   \   00000340   011C               MOV         R1,R0
   \   00000342   03C2               STMIA       R2!,{R0,R1}
    182          	C[2][5] = 0.0;
   \   00000344   0CAA               ADD         R2,SP,#+48
   \   00000346   8832               ADD         R2,#+136
   \   00000348   1032               ADD         R2,#+16
   \   0000034A   03C2               STMIA       R2!,{R0,R1}
    183          	C[2][6] = 0.0;
   \   0000034C   0CAA               ADD         R2,SP,#+48
   \   0000034E   8832               ADD         R2,#+136
   \   00000350   1832               ADD         R2,#+24
   \   00000352   03C2               STMIA       R2!,{R0,R1}
    184                  
    185           
    186                 Kalman(C,THETAm);      
   \   00000354   04A9               ADD         R1,SP,#+16
   \   00000356   0CA8               ADD         R0,SP,#+48
   \   00000358   ........           BL          ??Kalman
    187                 norm(Quat);
   \   0000035C   0648               LDR         R0,??kalman_attitude_update_1+0xC  ;; Quat
   \   0000035E   ........           _BLF        ??norm,??norm??rT
    188          }
   \   00000362   3CB0               ADD         SP,#+240
   \   00000364   70BC               POP         {R4-R6}
   \   00000366   01BC               POP         {R0}
   \   00000368   0047               BX          R0                 ;; return
   \   0000036A   C046               NOP         
   \                     ??kalman_attitude_update_1:
   \   0000036C   ........           DC32        ahrs_accel
   \   00000370   ........           DC32        ahrs_compass
   \   00000374   ........           DC32        DCM
   \   00000378   ........           DC32        Quat
   \   0000037C   192D4454           DC32        0x54442d19
   \   00000380   FB210940           DC32        0x400921fb
   \   00000384   182D4454           DC32        0x54442d18
   \   00000388   FB2119C0           DC32        0xc01921fb
   \   0000038C   FB2109C0           DC32        0xc00921fb
   \   00000390   FB211940           DC32        0x401921fb
   \   00000394   ........           DC32        DCM + 40
   \   00000398   ........           DC32        DCM + 64
   \   0000039C   ........           DC32        DCM + 16
   \   000003A0   0000F03F           DC32        0x3ff00000
   \   000003A4   0000F0BF           DC32        0xbff00000
   \   000003A8   ........           DC32        DCM + 8
    189          /*--------------------------------------------------------------------------------------*/ 
    190          
    191          
    192          /*--------------------------------------------------------------------------------------*/ 
    193          
    194          

   \                                 In segment CODE, align 4, keep-with-next
    195          void ahrs_update(void)
    196          {
   \                     ??ahrs_update:
   \   00000000   F0B5               PUSH        {R4-R7,LR}
   \   00000002   FFB0               SUB         SP,#+508
   \   00000004   8DB0               SUB         SP,#+52
    197            unsigned char i,j;
    198           // double A_transpose[7][7];
    199            double Pdot[7][7];
    200            double Xdot[4];
    201            
    202            //ahrs_pqr[0] -= bias[0];
    203            //ahrs_pqr[1] -= bias[1];
    204            //ahrs_pqr[2] -= bias[2];
    205           /*-----------------------make_a_matrix  generate_A----------------------------------------------------------*/
    206            const double		p = ahrs_pqr[0] ; 
   \   00000006   EE4A               LDR         R2,??ahrs_update_1  ;; ahrs_pqr
   \   00000008   6B46               MOV         R3,SP
   \   0000000A   03CA               LDMIA       R2!,{R0,R1}
   \   0000000C   083A               SUB         R2,#+8
   \   0000000E   03C3               STMIA       R3!,{R0,R1}
    207            const double		q = ahrs_pqr[1] ;
   \   00000010   101C               MOV         R0,R2
   \   00000012   0830               ADD         R0,#+8
   \   00000014   03C8               LDMIA       R0!,{R0,R1}
   \   00000016   03C3               STMIA       R3!,{R0,R1}
    208            const double		r = ahrs_pqr[2] ;
   \   00000018   1032               ADD         R2,#+16
   \   0000001A   03CA               LDMIA       R2!,{R0,R1}
   \   0000001C   03C3               STMIA       R3!,{R0,R1}
   \   0000001E   06AA               ADD         R2,SP,#+24
   \   00000020   E848               LDR         R0,??ahrs_update_1+0x4  ;; Quat
   \   00000022   03C8               LDMIA       R0!,{R0,R1}
   \   00000024   03C2               STMIA       R2!,{R0,R1}
    209          
    210          
    211            const double		q0 = Quat[0] ;
    212            const double		q1 = Quat[1] ;
   \   00000026   E848               LDR         R0,??ahrs_update_1+0x8  ;; Quat + 8
   \   00000028   03C8               LDMIA       R0!,{R0,R1}
   \   0000002A   03C2               STMIA       R2!,{R0,R1}
    213            const double		q2 = Quat[2] ;
   \   0000002C   E748               LDR         R0,??ahrs_update_1+0xC  ;; Quat + 16
   \   0000002E   03C8               LDMIA       R0!,{R0,R1}
   \   00000030   03C2               STMIA       R2!,{R0,R1}
    214            const double		q3 = Quat[3] ;
   \   00000032   E748               LDR         R0,??ahrs_update_1+0x10  ;; Quat + 24
   \   00000034   03C8               LDMIA       R0!,{R0,R1}
   \   00000036   03C2               STMIA       R2!,{R0,R1}
    215           
    216          	A[0][0] =  0;
   \   00000038   E64C               LDR         R4,??ahrs_update_1+0x14  ;; A
   \   0000003A   0026               MOV         R6,#+0
   \   0000003C   0027               MOV         R7,#+0
   \   0000003E   C0C4               STMIA       R4!,{R6,R7}
   \   00000040   083C               SUB         R4,#+8
    217          	A[0][1] = -p/2.0;
   \   00000042   0EAD               ADD         R5,SP,#+56
   \   00000044   6846               MOV         R0,SP
   \   00000046   03C8               LDMIA       R0!,{R0,R1}
   \   00000048   321C               MOV         R2,R6
   \   0000004A   8023               MOV         R3,#+128
   \   0000004C   DB05               LSL         R3,R3,#+23         ;; #+1073741824
   \   0000004E   ........           _BLF        __dDiv,??__dDiv??rT
   \   00000052   03C5               STMIA       R5!,{R0,R1}
   \   00000054   20AA               ADD         R2,SP,#+128
   \   00000056   0EA8               ADD         R0,SP,#+56
   \   00000058   03C8               LDMIA       R0!,{R0,R1}
   \   0000005A   8023               MOV         R3,#+128
   \   0000005C   1B06               LSL         R3,R3,#+24         ;; #-2147483648
   \   0000005E   5940               EOR         R1,R3
   \   00000060   03C2               STMIA       R2!,{R0,R1}
   \   00000062   221C               MOV         R2,R4
   \   00000064   0832               ADD         R2,#+8
   \   00000066   20A8               ADD         R0,SP,#+128
   \   00000068   03C8               LDMIA       R0!,{R0,R1}
   \   0000006A   03C2               STMIA       R2!,{R0,R1}
    218          	A[0][2] = -q/2.0;
   \   0000006C   02A8               ADD         R0,SP,#+8
   \   0000006E   03C8               LDMIA       R0!,{R0,R1}
   \   00000070   321C               MOV         R2,R6
   \   00000072   5B08               LSR         R3,R3,#+1
   \   00000074   ........           _BLF        __dDiv,??__dDiv??rT
   \   00000078   03C5               STMIA       R5!,{R0,R1}
   \   0000007A   1CAA               ADD         R2,SP,#+112
   \   0000007C   10A8               ADD         R0,SP,#+64
   \   0000007E   03C8               LDMIA       R0!,{R0,R1}
   \   00000080   8023               MOV         R3,#+128
   \   00000082   1B06               LSL         R3,R3,#+24         ;; #-2147483648
   \   00000084   5940               EOR         R1,R3
   \   00000086   03C2               STMIA       R2!,{R0,R1}
   \   00000088   221C               MOV         R2,R4
   \   0000008A   1032               ADD         R2,#+16
   \   0000008C   1CA8               ADD         R0,SP,#+112
   \   0000008E   03C8               LDMIA       R0!,{R0,R1}
   \   00000090   03C2               STMIA       R2!,{R0,R1}
    219          	A[0][3] = -r/2.0;
   \   00000092   04A8               ADD         R0,SP,#+16
   \   00000094   03C8               LDMIA       R0!,{R0,R1}
   \   00000096   321C               MOV         R2,R6
   \   00000098   5B08               LSR         R3,R3,#+1
   \   0000009A   ........           _BLF        __dDiv,??__dDiv??rT
   \   0000009E   03C5               STMIA       R5!,{R0,R1}
   \   000000A0   1EAA               ADD         R2,SP,#+120
   \   000000A2   12A8               ADD         R0,SP,#+72
   \   000000A4   03C8               LDMIA       R0!,{R0,R1}
   \   000000A6   8023               MOV         R3,#+128
   \   000000A8   1B06               LSL         R3,R3,#+24         ;; #-2147483648
   \   000000AA   5940               EOR         R1,R3
   \   000000AC   03C2               STMIA       R2!,{R0,R1}
   \   000000AE   221C               MOV         R2,R4
   \   000000B0   1832               ADD         R2,#+24
   \   000000B2   1EA8               ADD         R0,SP,#+120
   \   000000B4   03C8               LDMIA       R0!,{R0,R1}
   \   000000B6   03C2               STMIA       R2!,{R0,R1}
    220          	A[0][4] =  q1/2.0;
   \   000000B8   08A8               ADD         R0,SP,#+32
   \   000000BA   03C8               LDMIA       R0!,{R0,R1}
   \   000000BC   321C               MOV         R2,R6
   \   000000BE   5B08               LSR         R3,R3,#+1
   \   000000C0   ........           _BLF        __dDiv,??__dDiv??rT
   \   000000C4   03C5               STMIA       R5!,{R0,R1}
   \   000000C6   221C               MOV         R2,R4
   \   000000C8   2032               ADD         R2,#+32
   \   000000CA   14A8               ADD         R0,SP,#+80
   \   000000CC   03C8               LDMIA       R0!,{R0,R1}
   \   000000CE   03C2               STMIA       R2!,{R0,R1}
    221          	A[0][5] =  q2/2.0;
   \   000000D0   0AA8               ADD         R0,SP,#+40
   \   000000D2   03C8               LDMIA       R0!,{R0,R1}
   \   000000D4   321C               MOV         R2,R6
   \   000000D6   8023               MOV         R3,#+128
   \   000000D8   DB05               LSL         R3,R3,#+23         ;; #+1073741824
   \   000000DA   ........           _BLF        __dDiv,??__dDiv??rT
   \   000000DE   03C5               STMIA       R5!,{R0,R1}
   \   000000E0   221C               MOV         R2,R4
   \   000000E2   2832               ADD         R2,#+40
   \   000000E4   16A8               ADD         R0,SP,#+88
   \   000000E6   03C8               LDMIA       R0!,{R0,R1}
   \   000000E8   03C2               STMIA       R2!,{R0,R1}
    222          	A[0][6] =  q3/2.0;
   \   000000EA   0CA8               ADD         R0,SP,#+48
   \   000000EC   03C8               LDMIA       R0!,{R0,R1}
   \   000000EE   321C               MOV         R2,R6
   \   000000F0   8023               MOV         R3,#+128
   \   000000F2   DB05               LSL         R3,R3,#+23         ;; #+1073741824
   \   000000F4   ........           _BLF        __dDiv,??__dDiv??rT
   \   000000F8   03C5               STMIA       R5!,{R0,R1}
   \   000000FA   221C               MOV         R2,R4
   \   000000FC   3032               ADD         R2,#+48
   \   000000FE   18A8               ADD         R0,SP,#+96
   \   00000100   03C8               LDMIA       R0!,{R0,R1}
   \   00000102   03C2               STMIA       R2!,{R0,R1}
    223          
    224          	A[1][0] =  p/2.0;
   \   00000104   221C               MOV         R2,R4
   \   00000106   3832               ADD         R2,#+56
   \   00000108   0EA8               ADD         R0,SP,#+56
   \   0000010A   03C8               LDMIA       R0!,{R0,R1}
   \   0000010C   03C2               STMIA       R2!,{R0,R1}
    225          	A[1][1] =  0;
   \   0000010E   2664               STR         R6,[R4, #+64]
   \   00000110   6764               STR         R7,[R4, #+68]
    226          	A[1][2] =  r/2.0;
   \   00000112   12A8               ADD         R0,SP,#+72
   \   00000114   03C8               LDMIA       R0!,{R0,R1}
   \   00000116   A064               STR         R0,[R4, #+72]
   \   00000118   E164               STR         R1,[R4, #+76]
    227          	A[1][3] = -q/2.0;
   \   0000011A   1CA8               ADD         R0,SP,#+112
   \   0000011C   03C8               LDMIA       R0!,{R0,R1}
   \   0000011E   2065               STR         R0,[R4, #+80]
   \   00000120   6165               STR         R1,[R4, #+84]
    228          	A[1][4] = -q0/2.0;
   \   00000122   06A8               ADD         R0,SP,#+24
   \   00000124   03C8               LDMIA       R0!,{R0,R1}
   \   00000126   321C               MOV         R2,R6
   \   00000128   8023               MOV         R3,#+128
   \   0000012A   DB05               LSL         R3,R3,#+23         ;; #+1073741824
   \   0000012C   ........           _BLF        __dDiv,??__dDiv??rT
   \   00000130   8022               MOV         R2,#+128
   \   00000132   1206               LSL         R2,R2,#+24         ;; #-2147483648
   \   00000134   5140               EOR         R1,R2
   \   00000136   03C5               STMIA       R5!,{R0,R1}
   \   00000138   1AA8               ADD         R0,SP,#+104
   \   0000013A   03C8               LDMIA       R0!,{R0,R1}
   \   0000013C   A065               STR         R0,[R4, #+88]
   \   0000013E   E165               STR         R1,[R4, #+92]
    229          	A[1][5] =  q3/2.0;
   \   00000140   18A8               ADD         R0,SP,#+96
   \   00000142   03C8               LDMIA       R0!,{R0,R1}
   \   00000144   2066               STR         R0,[R4, #+96]
   \   00000146   6166               STR         R1,[R4, #+100]
    230          	A[1][6] = -q2/2.0;
   \   00000148   16A8               ADD         R0,SP,#+88
   \   0000014A   03C8               LDMIA       R0!,{R0,R1}
   \   0000014C   5140               EOR         R1,R2
   \   0000014E   A066               STR         R0,[R4, #+104]
   \   00000150   E166               STR         R1,[R4, #+108]
    231          
    232          	A[2][0] =  q/2.0;
   \   00000152   10A8               ADD         R0,SP,#+64
   \   00000154   03C8               LDMIA       R0!,{R0,R1}
   \   00000156   2067               STR         R0,[R4, #+112]
   \   00000158   6167               STR         R1,[R4, #+116]
    233          	A[2][1] = -r/2.0;
   \   0000015A   1EA8               ADD         R0,SP,#+120
   \   0000015C   03C8               LDMIA       R0!,{R0,R1}
   \   0000015E   A067               STR         R0,[R4, #+120]
   \   00000160   E167               STR         R1,[R4, #+124]
    234          	A[2][2] =  0;
   \   00000162   221C               MOV         R2,R4
   \   00000164   8032               ADD         R2,#+128
   \   00000166   C0C2               STMIA       R2!,{R6,R7}
   \   00000168   083A               SUB         R2,#+8
    235          	A[2][3] =  p/2.0;
   \   0000016A   131C               MOV         R3,R2
   \   0000016C   0833               ADD         R3,#+8
   \   0000016E   0EA8               ADD         R0,SP,#+56
   \   00000170   03C8               LDMIA       R0!,{R0,R1}
   \   00000172   03C3               STMIA       R3!,{R0,R1}
    236          	A[2][4] = -q3/2.0;
   \   00000174   131C               MOV         R3,R2
   \   00000176   1033               ADD         R3,#+16
   \   00000178   18A8               ADD         R0,SP,#+96
   \   0000017A   03C8               LDMIA       R0!,{R0,R1}
   \   0000017C   8025               MOV         R5,#+128
   \   0000017E   2D06               LSL         R5,R5,#+24         ;; #-2147483648
   \   00000180   6940               EOR         R1,R5
   \   00000182   03C3               STMIA       R3!,{R0,R1}
    237          	A[2][5] = -q0/2.0;
   \   00000184   131C               MOV         R3,R2
   \   00000186   1833               ADD         R3,#+24
   \   00000188   1AA8               ADD         R0,SP,#+104
   \   0000018A   03C8               LDMIA       R0!,{R0,R1}
   \   0000018C   03C3               STMIA       R3!,{R0,R1}
    238          	A[2][6] =  q1/2.0;
   \   0000018E   131C               MOV         R3,R2
   \   00000190   2033               ADD         R3,#+32
   \   00000192   14A8               ADD         R0,SP,#+80
   \   00000194   03C8               LDMIA       R0!,{R0,R1}
   \   00000196   03C3               STMIA       R3!,{R0,R1}
    239          
    240          	A[3][0] =  r/2.0;
   \   00000198   131C               MOV         R3,R2
   \   0000019A   2833               ADD         R3,#+40
   \   0000019C   12A8               ADD         R0,SP,#+72
   \   0000019E   03C8               LDMIA       R0!,{R0,R1}
   \   000001A0   03C3               STMIA       R3!,{R0,R1}
    241          	A[3][1] =  q/2.0;
   \   000001A2   131C               MOV         R3,R2
   \   000001A4   3033               ADD         R3,#+48
   \   000001A6   10A8               ADD         R0,SP,#+64
   \   000001A8   03C8               LDMIA       R0!,{R0,R1}
   \   000001AA   03C3               STMIA       R3!,{R0,R1}
    242          	A[3][2] = -p/2.0;
   \   000001AC   131C               MOV         R3,R2
   \   000001AE   3833               ADD         R3,#+56
   \   000001B0   20A8               ADD         R0,SP,#+128
   \   000001B2   03C8               LDMIA       R0!,{R0,R1}
   \   000001B4   03C3               STMIA       R3!,{R0,R1}
    243          	A[3][3] =  0;
   \   000001B6   1664               STR         R6,[R2, #+64]
   \   000001B8   5764               STR         R7,[R2, #+68]
    244          	A[3][4] =  q2/2.0;
   \   000001BA   16A8               ADD         R0,SP,#+88
   \   000001BC   03C8               LDMIA       R0!,{R0,R1}
   \   000001BE   9064               STR         R0,[R2, #+72]
   \   000001C0   D164               STR         R1,[R2, #+76]
    245          	A[3][5] = -q1/2.0;
   \   000001C2   14A8               ADD         R0,SP,#+80
   \   000001C4   03C8               LDMIA       R0!,{R0,R1}
   \   000001C6   6940               EOR         R1,R5
   \   000001C8   1065               STR         R0,[R2, #+80]
   \   000001CA   5165               STR         R1,[R2, #+84]
    246          	A[3][6] = -q0/2.0;
   \   000001CC   5832               ADD         R2,#+88
   \   000001CE   1AA8               ADD         R0,SP,#+104
   \   000001D0   03C8               LDMIA       R0!,{R0,R1}
   \   000001D2   03C2               STMIA       R2!,{R0,R1}
    247          
    248          	for( i=4 ; i<7 ; i++ )
   \   000001D4   0420               MOV         R0,#+4
    249          		for( j=0 ; j<7 ; j++ )
   \                     ??ahrs_update_2:
   \   000001D6   0025               MOV         R5,#+0
    250          			A[i][j] = 0;   
   \                     ??ahrs_update_3:
   \   000001D8   E900               LSL         R1,R5,#+3
   \   000001DA   3822               MOV         R2,#+56
   \   000001DC   4243               MUL         R2,R0
   \   000001DE   A218               ADD         R2,R4,R2
   \   000001E0   5118               ADD         R1,R2,R1
   \   000001E2   C0C1               STMIA       R1!,{R6,R7}
   \   000001E4   6D1C               ADD         R5,R5,#+1
   \   000001E6   2906               LSL         R1,R5,#+24
   \   000001E8   090E               LSR         R1,R1,#+24
   \   000001EA   0729               CMP         R1,#+7
   \   000001EC   F4D3               BCC         ??ahrs_update_3
   \   000001EE   401C               ADD         R0,R0,#+1
   \   000001F0   0106               LSL         R1,R0,#+24
   \   000001F2   090E               LSR         R1,R1,#+24
   \   000001F4   0729               CMP         R1,#+7
   \   000001F6   EED3               BCC         ??ahrs_update_2
    251            /*----------------------------propagate_state-----------------------------------------------------*/      
    252                  
    253                    Xdot[0]=0.5*(-p * q1 - q * q2 - r * q3)*dt;
   \   000001F8   22AD               ADD         R5,SP,#+136
   \   000001FA   04A8               ADD         R0,SP,#+16
   \   000001FC   03C8               LDMIA       R0!,{R0,R1}
   \   000001FE   0CAA               ADD         R2,SP,#+48
   \   00000200   0CCA               LDMIA       R2!,{R2,R3}
   \   00000202   ........           _BLF        __dMul,??__dMul??rT
   \   00000206   021C               MOV         R2,R0
   \   00000208   0B1C               MOV         R3,R1
   \   0000020A   0CB4               PUSH        {R2,R3}
   \   0000020C   04A8               ADD         R0,SP,#+16
   \   0000020E   0CC8               LDMIA       R0!,{R2,R3}
   \   00000210   0CA8               ADD         R0,SP,#+48
   \   00000212   03C8               LDMIA       R0!,{R0,R1}
   \   00000214   ........           _BLF        __dMul,??__dMul??rT
   \   00000218   061C               MOV         R6,R0
   \   0000021A   0F1C               MOV         R7,R1
   \   0000021C   02A8               ADD         R0,SP,#+8
   \   0000021E   0CC8               LDMIA       R0!,{R2,R3}
   \   00000220   0AA8               ADD         R0,SP,#+40
   \   00000222   03C8               LDMIA       R0!,{R0,R1}
   \   00000224   ........           _BLF        __dMul,??__dMul??rT
   \   00000228   8022               MOV         R2,#+128
   \   0000022A   1206               LSL         R2,R2,#+24         ;; #-2147483648
   \   0000022C   5140               EOR         R1,R2
   \   0000022E   321C               MOV         R2,R6
   \   00000230   3B1C               MOV         R3,R7
   \   00000232   ........           _BLF        __dSub,??__dSub??rT
   \   00000236   0CBC               POP         {R2,R3}
   \   00000238   ........           _BLF        __dSub,??__dSub??rT
   \   0000023C   021C               MOV         R2,R0
   \   0000023E   0B1C               MOV         R3,R1
   \   00000240   0020               MOV         R0,#+0
   \   00000242   ....               LDR         R1,??Subroutine4_0  ;; 0x3fe00000
   \   00000244   ........           _BLF        __dMul,??__dMul??rT
   \   00000248   021C               MOV         R2,R0
   \   0000024A   0B1C               MOV         R3,R1
   \   0000024C   ....               LDR         R0,??Subroutine4_0+0x4  ;; 0x37f38c54
   \   0000024E   ....               LDR         R1,??Subroutine4_0+0x8  ;; 0x3fa110a1
   \   00000250   ........           _BLF        __dMul,??__dMul??rT
   \   00000254   03C5               STMIA       R5!,{R0,R1}
    254                    Xdot[1]= 0.5*(p * q0 - q * q3 + r * q2)*dt;
   \   00000256   22AD               ADD         R5,SP,#+136
   \   00000258   0835               ADD         R5,#+8
   \   0000025A   04A8               ADD         R0,SP,#+16
   \   0000025C   03C8               LDMIA       R0!,{R0,R1}
   \   0000025E   0AAA               ADD         R2,SP,#+40
   \   00000260   0CCA               LDMIA       R2!,{R2,R3}
   \   00000262   ........           _BLF        __dMul,??__dMul??rT
   \   00000266   03B4               PUSH        {R0,R1}
   \   00000268   04A8               ADD         R0,SP,#+16
   \   0000026A   0CC8               LDMIA       R0!,{R2,R3}
   \   0000026C   0EA8               ADD         R0,SP,#+56
   \   0000026E   03C8               LDMIA       R0!,{R0,R1}
   \   00000270   ........           _BLF        __dMul,??__dMul??rT
   \   00000274   061C               MOV         R6,R0
   \   00000276   0F1C               MOV         R7,R1
   \   00000278   02A8               ADD         R0,SP,#+8
   \   0000027A   0CC8               LDMIA       R0!,{R2,R3}
   \   0000027C   08A8               ADD         R0,SP,#+32
   \   0000027E   03C8               LDMIA       R0!,{R0,R1}
   \   00000280   ........           _BLF        __dMul,??__dMul??rT
   \   00000284   321C               MOV         R2,R6
   \   00000286   3B1C               MOV         R3,R7
   \   00000288   ........           _BLF        __dSub,??__dSub??rT
   \   0000028C   0CBC               POP         {R2,R3}
   \   0000028E   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000292   021C               MOV         R2,R0
   \   00000294   0B1C               MOV         R3,R1
   \   00000296   0020               MOV         R0,#+0
   \   00000298   ....               LDR         R1,??Subroutine4_0+0xC  ;; 0x3fe00000
   \   0000029A   ........           _BLF        __dMul,??__dMul??rT
   \   0000029E   021C               MOV         R2,R0
   \   000002A0   0B1C               MOV         R3,R1
   \   000002A2   ....               LDR         R0,??Subroutine4_0+0x10  ;; 0x37f38c54
   \   000002A4   ....               LDR         R1,??Subroutine4_0+0x14  ;; 0x3fa110a1
   \   000002A6   ........           _BLF        __dMul,??__dMul??rT
   \   000002AA   03C5               STMIA       R5!,{R0,R1}
    255                    Xdot[2]= 0.5*(p * q3 + q * q0 - r * q1)*dt;
   \   000002AC   22AD               ADD         R5,SP,#+136
   \   000002AE   1035               ADD         R5,#+16
   \   000002B0   04A8               ADD         R0,SP,#+16
   \   000002B2   03C8               LDMIA       R0!,{R0,R1}
   \   000002B4   08AA               ADD         R2,SP,#+32
   \   000002B6   0CCA               LDMIA       R2!,{R2,R3}
   \   000002B8   ........           _BLF        __dMul,??__dMul??rT
   \   000002BC   021C               MOV         R2,R0
   \   000002BE   0B1C               MOV         R3,R1
   \   000002C0   0CB4               PUSH        {R2,R3}
   \   000002C2   04A8               ADD         R0,SP,#+16
   \   000002C4   0CC8               LDMIA       R0!,{R2,R3}
   \   000002C6   08A8               ADD         R0,SP,#+32
   \   000002C8   03C8               LDMIA       R0!,{R0,R1}
   \   000002CA   ........           _BLF        __dMul,??__dMul??rT
   \   000002CE   061C               MOV         R6,R0
   \   000002D0   0F1C               MOV         R7,R1
   \   000002D2   02A8               ADD         R0,SP,#+8
   \   000002D4   0CC8               LDMIA       R0!,{R2,R3}
   \   000002D6   0EA8               ADD         R0,SP,#+56
   \   000002D8   03C8               LDMIA       R0!,{R0,R1}
   \   000002DA   ........           _BLF        __dMul,??__dMul??rT
   \   000002DE   321C               MOV         R2,R6
   \   000002E0   3B1C               MOV         R3,R7
   \   000002E2   ........           _BLF        __dAdd,??__dAdd??rT
   \   000002E6   0CBC               POP         {R2,R3}
   \   000002E8   ........           _BLF        __dSub,??__dSub??rT
   \   000002EC   021C               MOV         R2,R0
   \   000002EE   0B1C               MOV         R3,R1
   \   000002F0   0020               MOV         R0,#+0
   \   000002F2   ....               LDR         R1,??Subroutine4_0+0x18  ;; 0x3fe00000
   \   000002F4   ........           _BLF        __dMul,??__dMul??rT
   \   000002F8   021C               MOV         R2,R0
   \   000002FA   0B1C               MOV         R3,R1
   \   000002FC   ....               LDR         R0,??Subroutine4_0+0x1C  ;; 0x37f38c54
   \   000002FE   ....               LDR         R1,??Subroutine4_0+0x20  ;; 0x3fa110a1
   \   00000300   ........           _BLF        __dMul,??__dMul??rT
   \   00000304   03C5               STMIA       R5!,{R0,R1}
    256                    Xdot[3]=0.5*(-p * q2 + q * q1 + r * q0)*dt;  //the quaternion instant modify;
   \   00000306   22AD               ADD         R5,SP,#+136
   \   00000308   1835               ADD         R5,#+24
   \   0000030A   04A8               ADD         R0,SP,#+16
   \   0000030C   03C8               LDMIA       R0!,{R0,R1}
   \   0000030E   06AA               ADD         R2,SP,#+24
   \   00000310   0CCA               LDMIA       R2!,{R2,R3}
   \   00000312   ........           _BLF        __dMul,??__dMul??rT
   \   00000316   03B4               PUSH        {R0,R1}
   \   00000318   02A8               ADD         R0,SP,#+8
   \   0000031A   0CC8               LDMIA       R0!,{R2,R3}
   \   0000031C   0CA8               ADD         R0,SP,#+48
   \   0000031E   03C8               LDMIA       R0!,{R0,R1}
   \   00000320   ........           _BLF        __dMul,??__dMul??rT
   \   00000324   061C               MOV         R6,R0
   \   00000326   0F1C               MOV         R7,R1
   \   00000328   04A8               ADD         R0,SP,#+16
   \   0000032A   0CC8               LDMIA       R0!,{R2,R3}
   \   0000032C   0AA8               ADD         R0,SP,#+40
   \   0000032E   03C8               LDMIA       R0!,{R0,R1}
   \   00000330   ........           _BLF        __dMul,??__dMul??rT
   \   00000334   321C               MOV         R2,R6
   \   00000336   3B1C               MOV         R3,R7
   \   00000338   ........           _BLF        __dSub,??__dSub??rT
   \   0000033C   0CBC               POP         {R2,R3}
   \   0000033E   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000342   021C               MOV         R2,R0
   \   00000344   0B1C               MOV         R3,R1
   \   00000346   0020               MOV         R0,#+0
   \   00000348   ....               LDR         R1,??Subroutine4_0+0x24  ;; 0x3fe00000
   \   0000034A   ........           _BLF        __dMul,??__dMul??rT
   \   0000034E   021C               MOV         R2,R0
   \   00000350   0B1C               MOV         R3,R1
   \   00000352   ....               LDR         R0,??Subroutine4_0+0x28  ;; 0x37f38c54
   \   00000354   ....               LDR         R1,??Subroutine4_0+0x2C  ;; 0x3fa110a1
   \   00000356   ........           _BLF        __dMul,??__dMul??rT
   \   0000035A   03C5               STMIA       R5!,{R0,R1}
    257                 for(i=0;i<4;i++)
   \   0000035C   0025               MOV         R5,#+0
    258                  Quat[i]+=Xdot[i];
   \                     ??ahrs_update_4:
   \   0000035E   EF00               LSL         R7,R5,#+3
   \   00000360   1848               LDR         R0,??ahrs_update_1+0x4  ;; Quat
   \   00000362   C619               ADD         R6,R0,R7
   \   00000364   03CE               LDMIA       R6!,{R0,R1}
   \   00000366   083E               SUB         R6,#+8
   \   00000368   021C               MOV         R2,R0
   \   0000036A   0B1C               MOV         R3,R1
   \   0000036C   22A8               ADD         R0,SP,#+136
   \   0000036E   C019               ADD         R0,R0,R7
   \   00000370   03C8               LDMIA       R0!,{R0,R1}
   \   00000372   ........           _BLF        __dAdd,??__dAdd??rT
   \   00000376   03C6               STMIA       R6!,{R0,R1}
   \   00000378   6D1C               ADD         R5,R5,#+1
   \   0000037A   2806               LSL         R0,R5,#+24
   \   0000037C   000E               LSR         R0,R0,#+24
   \   0000037E   0428               CMP         R0,#+4
   \   00000380   EDD3               BCC         ??ahrs_update_4
    259                 norm(Quat);  
   \   00000382   1048               LDR         R0,??ahrs_update_1+0x4  ;; Quat
   \   00000384   ........           _BLF        ??norm,??norm??rT
    260           
    261            /*-------------------------------propagate_covariance propagate_covariance0--------------------------------------------------*/      
    262                 memset( Pdot, 0, 7 * 7 * sizeof( double ) );
   \   00000388   C420               MOV         R0,#+196
   \   0000038A   4000               LSL         R0,R0,#+1          ;; #+392
   \   0000038C   0021               MOV         R1,#+0
   \   0000038E   2AAA               ADD         R2,SP,#+168
   \                     ??ahrs_update_5:
   \   00000390   001F               SUB         R0,R0,#+4
   \   00000392   1150               STR         R1,[R2, R0]
   \   00000394   FCD1               BNE         ??ahrs_update_5
    263                 for(i=0;i<7;i++)
   \   00000396   0022               MOV         R2,#+0
   \   00000398   ....               LDR         R5,??Subroutine4_0+0x30  ;; Q
    264                   Pdot[i][i]=Q[i][i];
   \                     ??ahrs_update_6:
   \   0000039A   D000               LSL         R0,R2,#+3
   \   0000039C   3821               MOV         R1,#+56
   \   0000039E   5143               MUL         R1,R2
   \   000003A0   2AAB               ADD         R3,SP,#+168
   \   000003A2   5B18               ADD         R3,R3,R1
   \   000003A4   1B18               ADD         R3,R3,R0
   \   000003A6   6918               ADD         R1,R5,R1
   \   000003A8   0818               ADD         R0,R1,R0
   \   000003AA   03C8               LDMIA       R0!,{R0,R1}
   \   000003AC   03C3               STMIA       R3!,{R0,R1}
   \   000003AE   521C               ADD         R2,R2,#+1
   \   000003B0   1006               LSL         R0,R2,#+24
   \   000003B2   000E               LSR         R0,R0,#+24
   \   000003B4   0728               CMP         R0,#+7
   \   000003B6   F0D3               BCC         ??ahrs_update_6
    265              
    266            /*---------------------------propagate_covariance1-----------------------------------------------------------*/ 
    267                 mulNxM(Pdot, A, P, 7, 7, 7, 0, 1 );	
   \   000003B8   0123               MOV         R3,#+1
   \   000003BA   0022               MOV         R2,#+0
   \   000003BC   0721               MOV         R1,#+7
   \   000003BE   0BE0               B           ??ahrs_update_7
   \                     ??ahrs_update_1:
   \   000003C0   ........           DC32        ahrs_pqr
   \   000003C4   ........           DC32        Quat
   \   000003C8   ........           DC32        Quat + 8
   \   000003CC   ........           DC32        Quat + 16
   \   000003D0   ........           DC32        Quat + 24
   \   000003D4   ........           DC32        A
   \                     ??ahrs_update_7:
   \   000003D8   0720               MOV         R0,#+7
   \   000003DA   0FB4               PUSH        {R0-R3}
   \   000003DC   031C               MOV         R3,R0
   \   000003DE   ....               LDR         R2,??Subroutine4_0+0x34  ;; Quat + 56
   \   000003E0   211C               MOV         R1,R4
   \   000003E2   2EA8               ADD         R0,SP,#+184
   \   000003E4   ........           _BLF        ??mulNxM,??mulNxM??rT
    268            /*  for(i=0;i<7;i++)
    269                for(j=0;j<7;j++)
    270                  for(l=0;l<7;l++)
    271                    Pdot[i][j] += A[i][l]*P[l][j];*/
    272            /*---------------------------propagate_covariance2-----------------------------------------------------------*/  
    273              mulNxM(Pdot, P, A, 7, 7, 7, 1, 1 );
   \   000003E8   0123               MOV         R3,#+1
   \   000003EA   1A1C               MOV         R2,R3
   \   000003EC   0721               MOV         R1,#+7
   \   000003EE   081C               MOV         R0,R1
   \   000003F0   0FB4               PUSH        {R0-R3}
   \   000003F2   031C               MOV         R3,R0
   \   000003F4   221C               MOV         R2,R4
   \   000003F6   ....               LDR         R1,??Subroutine4_0+0x38  ;; Quat + 56
   \   000003F8   32A8               ADD         R0,SP,#+200
   \   000003FA   ........           _BLF        ??mulNxM,??mulNxM??rT
    274              
    275                /* for(i=0 ; i<7 ; i++ )
    276          		{
    277          		 for( j=0 ; j<7 ; j++ )
    278          		 A_transpose[j][i] = A[i][j];
    279          		} 
    280              for(i=0;i<7;i++)
    281                for(j=0;j<7;j++)
    282                  for(l=0;l<7;l++)
    283                    Pdot[i][j] += P[i][l]*A_transpose[l][j];*/
    284           /*---------------------------propagate_covariance3-----------------------------------------------------------*/    
    285             
    286              for(i=0;i<7;i++)
   \   000003FE   0024               MOV         R4,#+0
   \   00000400   08B0               ADD         SP,#+32
    287                for(j=0;j<7;j++)
   \                     ??ahrs_update_8:
   \   00000402   0025               MOV         R5,#+0
   \   00000404   3827               MOV         R7,#+56
   \   00000406   6743               MUL         R7,R4
    288                   {  
    289                      P[i][j]+=Pdot[i][j]*dt;
   \                     ??ahrs_update_9:
   \   00000408   E800               LSL         R0,R5,#+3
   \   0000040A   ....               LDR         R1,??Subroutine4_0+0x3C  ;; Quat + 56
   \   0000040C   C919               ADD         R1,R1,R7
   \   0000040E   0E18               ADD         R6,R1,R0
   \   00000410   2AA9               ADD         R1,SP,#+168
   \   00000412   C919               ADD         R1,R1,R7
   \   00000414   0818               ADD         R0,R1,R0
   \   00000416   0CC8               LDMIA       R0!,{R2,R3}
   \   00000418   ....               LDR         R0,??Subroutine4_0+0x40  ;; 0x37f38c54
   \   0000041A   ....               LDR         R1,??Subroutine4_0+0x44  ;; 0x3fa110a1
   \   0000041C   ........           _BLF        __dMul,??__dMul??rT
   \   00000420   021C               MOV         R2,R0
   \   00000422   0B1C               MOV         R3,R1
   \   00000424   03CE               LDMIA       R6!,{R0,R1}
   \   00000426   083E               SUB         R6,#+8
   \   00000428   ........           _BLF        __dAdd,??__dAdd??rT
   \   0000042C   03C6               STMIA       R6!,{R0,R1}
    290                   }
   \   0000042E   6D1C               ADD         R5,R5,#+1
   \   00000430   2806               LSL         R0,R5,#+24
   \   00000432   000E               LSR         R0,R0,#+24
   \   00000434   0728               CMP         R0,#+7
   \   00000436   E7D3               BCC         ??ahrs_update_9
   \   00000438   641C               ADD         R4,R4,#+1
   \   0000043A   2006               LSL         R0,R4,#+24
   \   0000043C   000E               LSR         R0,R0,#+24
   \   0000043E   0728               CMP         R0,#+7
   \   00000440   DFD3               BCC         ??ahrs_update_8
    291          
    292          	//trace = 0;
    293          
    294          	//for( i=0 ; i<7 ; i++ )
    295          	  //trace += P[i][i];	
    296            /*-----------------------------kalman_attitude_update----------------------------------------------------*/  
    297                //  quat2DCM(DCM,quat);
    298                //  quat2euler(ahrs_theta,quat);
    299                  kalman_attitude_update();
   \   00000442   ........           BL          ??kalman_attitude_update
    300                 quat2euler( ahrs_theta, Quat );
   \   00000446   ....               LDR         R1,??DataTable14   ;; Quat
   \   00000448   ....               LDR         R0,??Subroutine4_0+0x48  ;; Quat + 448
   \   0000044A   ........           _BLF        ??quat2euler,??quat2euler??rT
    301               //  ahrs_theta[0] -=5*C_DEG2RAD;
    302                 // ahrs_theta[1] +=2*C_DEG2RAD;
    303          }
   \   0000044E   7FB0               ADD         SP,#+508
   \   00000450   0DB0               ADD         SP,#+52
   \   00000452   C046               NOP         
   \   00000454                      REQUIRE ?Subroutine4
   \   00000454                      ;; // Fall through to label ?Subroutine4

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32        Quat

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32        ahrs_compass

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32        ahrs_pqr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32        Quat + 24

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32        Quat + 16

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32        Quat + 8

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32        Quat

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for Quat>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for bias>`:
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000030   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for P>`:
   \   00000038   000000000000       DC32 0H, 0H
   \              0000        
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000060   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000070   000000000000       DC32 0H, 0H
   \              0000        
   \   00000078   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000098   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A8   000000000000       DC32 0H, 0H
   \              0000        
   \   000000B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E0   000000000000       DC32 0H, 0H
   \              0000        
   \   000000E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000108   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000118   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 3FF00000H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              0000F03F    
   \   00000140   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000150   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 3FF00000H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              00000000F03F
   \   00000180   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   00000188   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 3FF00000H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              F03F        
   \                     `?<Initializer for ahrs_theta>`:
   \   000001C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for Q>`:
   \   00000000   7B14AE47E17A       DC32 47AE147BH, 3F747AE1H
   \              743F        
   \   00000008   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000018   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000038   000000000000       DC32 0H, 0H, 0D2F1A9FCH, 3F50624DH
   \              0000FCA9F1D2
   \              4D62503F    
   \   00000048   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000058   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000068   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   00000070   000000000000       DC32 0H, 0H, 0H, 0H, 0D2F1A9FCH, 3F50624DH
   \              000000000000
   \              00000000FCA9
   \              F1D24D62503F
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000098   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A8   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 47AE147BH, 3F747AE1H
   \              000000000000
   \              000000000000
   \              000000000000
   \              7B14AE47E17A
   \              743F        
   \   000000C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   000000E0   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 3FF00000H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              0000F03F    
   \   00000108   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000118   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 3FF00000H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              00000000F03F
   \   00000148   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   00000150   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 3FF00000H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              F03F        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for R_attitude>`:
   \   00000000   000000000000       DC32 0H, 40080000H
   \              0840        
   \   00000008   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000018   000000000000       DC32 0H, 0H, 0H, 40080000H
   \              000000000000
   \              00000840    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   00000030   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 40200000H
   \              000000000000
   \              000000000000
   \              000000002040
    304          
    305          
    306          
    307           
    308          
    309          
    310          
    311          
    312          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     Kalman(double const (*)[7], double const *)
                                      480
     ahrs_init()                       12
     ahrs_update()                    612
     kalman_attitude_update()         256


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     DCM                              72
     raw_ahrs_theta                   24
     Quat                            472
     Q                               392
     R_attitude                       72
     A                               392
     Kalman(double const (*)[7], double const *)
                                     900
     ?Subroutine4                     84
     ahrs_init()                      76
     kalman_attitude_update()        940
     ahrs_update()                  1108
     ??DataTable1                      4
     ??DataTable2                      4
     ??DataTable3                      4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ?<Initializer for Quat>         472
     ?<Initializer for Q>            392
     ?<Initializer for R_attitude>    72
      Others                         224

 
 3 336 bytes in segment CODE
   936 bytes in segment DATA_I
   936 bytes in segment DATA_ID
   488 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 3 136 bytes of CODE  memory (+ 224 bytes shared)
   936 bytes of CONST memory
 1 424 bytes of DATA  memory

Errors: none
Warnings: none
